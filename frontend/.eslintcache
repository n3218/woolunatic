[{"/projects/udemy/mern/frontend/src/reducers/productReducers.js":"1","/projects/udemy/mern/frontend/src/store.js":"2","/projects/udemy/mern/frontend/src/actions/productActions.js":"3","/projects/udemy/mern/frontend/src/screens/ProductScreen.js":"4","/projects/udemy/mern/frontend/src/screens/ProductListScreen.js":"5","/projects/udemy/mern/frontend/src/index.js":"6","/projects/udemy/mern/frontend/src/components/Product.js":"7","/projects/udemy/mern/frontend/src/screens/CartScreen.js":"8","/projects/udemy/mern/frontend/src/screens/OrderScreen.js":"9","/projects/udemy/mern/frontend/src/screens/UserListScreen.js":"10","/projects/udemy/mern/frontend/src/screens/ProductEditScreen.js":"11","/projects/udemy/mern/frontend/src/App.js":"12","/projects/udemy/mern/frontend/src/components/SearchBox.js":"13","/projects/udemy/mern/frontend/src/screens/HomeScreen.js":"14","/projects/udemy/mern/frontend/src/reducers/cartReducers.js":"15","/projects/udemy/mern/frontend/src/components/Footer.js":"16","/projects/udemy/mern/frontend/src/screens/RegisterScreen.js":"17","/projects/udemy/mern/frontend/src/screens/ShippingScreen.js":"18","/projects/udemy/mern/frontend/src/screens/PlaceOrderScreen.js":"19","/projects/udemy/mern/frontend/src/components/CheckoutSteps.js":"20","/projects/udemy/mern/frontend/src/constants/userConstants.js":"21","/projects/udemy/mern/frontend/src/actions/userActions.js":"22","/projects/udemy/mern/frontend/src/actions/cartActions.js":"23","/projects/udemy/mern/frontend/src/components/Paginate.js":"24","/projects/udemy/mern/frontend/src/constants/productConstants.js":"25","/projects/udemy/mern/frontend/src/screens/LoginScreen.js":"26","/projects/udemy/mern/frontend/src/screens/HowToScreen.js":"27","/projects/udemy/mern/frontend/src/screens/UserEditScreen.js":"28","/projects/udemy/mern/frontend/src/components/Message.js":"29","/projects/udemy/mern/frontend/src/components/ProductCarousel.js":"30","/projects/udemy/mern/frontend/src/constants/cartConstants.js":"31","/projects/udemy/mern/frontend/src/constants/orderConstants.js":"32","/projects/udemy/mern/frontend/src/actions/orderActions.js":"33","/projects/udemy/mern/frontend/src/screens/ProfileScreen.js":"34","/projects/udemy/mern/frontend/src/components/FormContainer.js":"35","/projects/udemy/mern/frontend/src/components/FormField.js":"36","/projects/udemy/mern/frontend/src/components/Meta.js":"37","/projects/udemy/mern/frontend/src/screens/AboutScreen.js":"38","/projects/udemy/mern/frontend/src/screens/OrderListScreen.js":"39","/projects/udemy/mern/frontend/src/screens/PaymentScreen.js":"40","/projects/udemy/mern/frontend/src/reducers/orderReducers.js":"41","/projects/udemy/mern/frontend/src/components/Loader.js":"42","/projects/udemy/mern/frontend/src/reducers/userReducers.js":"43","/projects/woolunatic/frontend/src/index.js":"44","/projects/woolunatic/frontend/src/store.js":"45","/projects/woolunatic/frontend/src/App.js":"46","/projects/woolunatic/frontend/src/reducers/productReducers.js":"47","/projects/woolunatic/frontend/src/reducers/orderReducers.js":"48","/projects/woolunatic/frontend/src/reducers/userReducers.js":"49","/projects/woolunatic/frontend/src/reducers/cartReducers.js":"50","/projects/woolunatic/frontend/src/components/Footer.js":"51","/projects/woolunatic/frontend/src/screens/CollectionScreen.js":"52","/projects/woolunatic/frontend/src/screens/HomeScreen.js":"53","/projects/woolunatic/frontend/src/components/Header/Header.js":"54","/projects/woolunatic/frontend/src/screens/RegisterScreen.js":"55","/projects/woolunatic/frontend/src/screens/LoginScreen.js":"56","/projects/woolunatic/frontend/src/screens/ProfileScreen.js":"57","/projects/woolunatic/frontend/src/screens/AboutScreen.js":"58","/projects/woolunatic/frontend/src/screens/HowToScreen.js":"59","/projects/woolunatic/frontend/src/screens/ProductScreen/ProductScreen.js":"60","/projects/woolunatic/frontend/src/components/Message.js":"61","/projects/woolunatic/frontend/src/components/Loader.js":"62","/projects/woolunatic/frontend/src/components/Meta.js":"63","/projects/woolunatic/frontend/src/components/SearchBox.js":"64","/projects/woolunatic/frontend/src/components/FormContainer.js":"65","/projects/woolunatic/frontend/src/components/ImageLarge.js":"66","/projects/woolunatic/frontend/src/components/ImageUpload.js":"67","/projects/woolunatic/frontend/src/components/Paginate.js":"68","/projects/woolunatic/frontend/src/components/FormField.js":"69","/projects/woolunatic/frontend/src/components/OrderSummary.js":"70","/projects/woolunatic/frontend/src/constants/productConstants.js":"71","/projects/woolunatic/frontend/src/constants/userConstants.js":"72","/projects/woolunatic/frontend/src/constants/cartConstants.js":"73","/projects/woolunatic/frontend/src/constants/orderConstants.js":"74","/projects/woolunatic/frontend/src/components/Product/Product.js":"75","/projects/woolunatic/frontend/src/actions/cartActions.js":"76","/projects/woolunatic/frontend/src/actions/userActions.js":"77","/projects/woolunatic/frontend/src/actions/orderActions.js":"78","/projects/woolunatic/frontend/src/actions/productActions.js":"79","/projects/woolunatic/frontend/src/components/Filter/Filter.js":"80","/projects/woolunatic/frontend/src/components/Promo/Promo.js":"81","/projects/woolunatic/frontend/src/components/ProductListItem/ProductListItem.js":"82","/projects/woolunatic/frontend/src/components/Rating/Rating.js":"83","/projects/woolunatic/frontend/src/components/CheckoutSteps.js":"84","/projects/woolunatic/frontend/src/screens/admin/UserListScreen.js":"85","/projects/woolunatic/frontend/src/screens/admin/UserEditScreen.js":"86","/projects/woolunatic/frontend/src/screens/admin/ProductListScreen.js":"87","/projects/woolunatic/frontend/src/screens/admin/OrderListScreen.js":"88","/projects/woolunatic/frontend/src/screens/admin/AdminScreen.js":"89","/projects/woolunatic/frontend/src/screens/admin/ProductEditScreen.js":"90","/projects/woolunatic/frontend/src/components/ShippingSection.js":"91","/projects/woolunatic/frontend/src/components/PaymentSection/PaymentSection.js":"92","/projects/woolunatic/frontend/src/components/CartItem.jsx":"93","/projects/woolunatic/frontend/src/components/OrderWeightsSummary.js":"94","/projects/woolunatic/frontend/src/components/ProductsBulkUpload.js":"95","/projects/woolunatic/frontend/src/components/ImagesBulkUpload.js":"96","/projects/woolunatic/frontend/src/components/Utils.js":"97","/projects/woolunatic/frontend/src/screens/order/PaymentScreen.js":"98","/projects/woolunatic/frontend/src/screens/order/CartLayout.js":"99","/projects/woolunatic/frontend/src/screens/order/ShippingScreen.js":"100","/projects/woolunatic/frontend/src/screens/order/CartScreen.js":"101","/projects/woolunatic/frontend/src/screens/order/OrderScreen.js":"102","/projects/woolunatic/frontend/src/screens/order/PayOrderScreen.js":"103"},{"size":3611,"mtime":1607757776579,"results":"104","hashOfConfig":"105"},{"size":2451,"mtime":1607759690843,"results":"106","hashOfConfig":"105"},{"size":4464,"mtime":1607759657883,"results":"107","hashOfConfig":"105"},{"size":8644,"mtime":1607991719281,"results":"108","hashOfConfig":"105"},{"size":4564,"mtime":1607986229318,"results":"109","hashOfConfig":"105"},{"size":565,"mtime":1607743974810,"results":"110","hashOfConfig":"105"},{"size":755,"mtime":1607989479050,"results":"111","hashOfConfig":"105"},{"size":3494,"mtime":1607987184851,"results":"112","hashOfConfig":"105"},{"size":6694,"mtime":1607849013406,"results":"113","hashOfConfig":"105"},{"size":2799,"mtime":1607849397458,"results":"114","hashOfConfig":"105"},{"size":5354,"mtime":1607991078855,"results":"115","hashOfConfig":"105"},{"size":2892,"mtime":1607767220956,"results":"116","hashOfConfig":"105"},{"size":663,"mtime":1607751140992,"results":"117","hashOfConfig":"105"},{"size":1567,"mtime":1608093621326,"results":"118","hashOfConfig":"105"},{"size":1087,"mtime":1607029233705,"results":"119","hashOfConfig":"105"},{"size":347,"mtime":1607756146400,"results":"120","hashOfConfig":"105"},{"size":2923,"mtime":1607849274553,"results":"121","hashOfConfig":"105"},{"size":2595,"mtime":1607849308569,"results":"122","hashOfConfig":"105"},{"size":4817,"mtime":1607849107192,"results":"123","hashOfConfig":"105"},{"size":1359,"mtime":1607581089193,"results":"124","hashOfConfig":"105"},{"size":1427,"mtime":1607546186485,"results":"125","hashOfConfig":"105"},{"size":5222,"mtime":1607546930129,"results":"126","hashOfConfig":"105"},{"size":1232,"mtime":1607917946631,"results":"127","hashOfConfig":"105"},{"size":651,"mtime":1607755819261,"results":"128","hashOfConfig":"105"},{"size":1496,"mtime":1607757559837,"results":"129","hashOfConfig":"105"},{"size":2096,"mtime":1607848915205,"results":"130","hashOfConfig":"105"},{"size":1802,"mtime":1607848890420,"results":"131","hashOfConfig":"105"},{"size":2955,"mtime":1607849356751,"results":"132","hashOfConfig":"105"},{"size":236,"mtime":1606886391919,"results":"133","hashOfConfig":"105"},{"size":1335,"mtime":1608093343864,"results":"134","hashOfConfig":"105"},{"size":235,"mtime":1607029033180,"results":"135","hashOfConfig":"105"},{"size":1186,"mtime":1607671329711,"results":"136","hashOfConfig":"105"},{"size":4248,"mtime":1607663692039,"results":"137","hashOfConfig":"105"},{"size":4973,"mtime":1607849233664,"results":"138","hashOfConfig":"105"},{"size":331,"mtime":1606963583322,"results":"139","hashOfConfig":"105"},{"size":386,"mtime":1607646760910,"results":"140","hashOfConfig":"105"},{"size":388,"mtime":1607848805718,"results":"141","hashOfConfig":"105"},{"size":2443,"mtime":1607848774270,"results":"142","hashOfConfig":"105"},{"size":2937,"mtime":1607848951292,"results":"143","hashOfConfig":"105"},{"size":1829,"mtime":1607849084658,"results":"144","hashOfConfig":"105"},{"size":3253,"mtime":1607657489417,"results":"145","hashOfConfig":"105"},{"size":322,"mtime":1606886227821,"results":"146","hashOfConfig":"105"},{"size":3294,"mtime":1607546810510,"results":"147","hashOfConfig":"105"},{"size":566,"mtime":1613708243171,"results":"148","hashOfConfig":"149"},{"size":3007,"mtime":1614107357522,"results":"150","hashOfConfig":"149"},{"size":3477,"mtime":1614410461837,"results":"151","hashOfConfig":"149"},{"size":6061,"mtime":1613542959979,"results":"152","hashOfConfig":"149"},{"size":4059,"mtime":1614413206881,"results":"153","hashOfConfig":"149"},{"size":3375,"mtime":1612593653922,"results":"154","hashOfConfig":"149"},{"size":2400,"mtime":1614457901730,"results":"155","hashOfConfig":"149"},{"size":666,"mtime":1613089663435,"results":"156","hashOfConfig":"149"},{"size":2119,"mtime":1613799512830,"results":"157","hashOfConfig":"149"},{"size":1497,"mtime":1613681883519,"results":"158","hashOfConfig":"149"},{"size":6252,"mtime":1614196119861,"results":"159","hashOfConfig":"149"},{"size":2939,"mtime":1612339796162,"results":"160","hashOfConfig":"149"},{"size":2112,"mtime":1613771770442,"results":"161","hashOfConfig":"149"},{"size":5802,"mtime":1614391963777,"results":"162","hashOfConfig":"149"},{"size":2695,"mtime":1612467647439,"results":"163","hashOfConfig":"149"},{"size":1961,"mtime":1612467625109,"results":"164","hashOfConfig":"149"},{"size":13432,"mtime":1614238770633,"results":"165","hashOfConfig":"149"},{"size":689,"mtime":1614400873603,"results":"166","hashOfConfig":"149"},{"size":322,"mtime":1606886227821,"results":"167","hashOfConfig":"149"},{"size":388,"mtime":1607848805718,"results":"168","hashOfConfig":"149"},{"size":714,"mtime":1612340396077,"results":"169","hashOfConfig":"149"},{"size":360,"mtime":1612681224317,"results":"170","hashOfConfig":"149"},{"size":516,"mtime":1613441737211,"results":"171","hashOfConfig":"149"},{"size":3930,"mtime":1613529117379,"results":"172","hashOfConfig":"149"},{"size":667,"mtime":1609317644457,"results":"173","hashOfConfig":"149"},{"size":1336,"mtime":1612341164287,"results":"174","hashOfConfig":"149"},{"size":1847,"mtime":1614392822654,"results":"175","hashOfConfig":"149"},{"size":2801,"mtime":1613542804594,"results":"176","hashOfConfig":"149"},{"size":1476,"mtime":1608106568424,"results":"177","hashOfConfig":"149"},{"size":1521,"mtime":1614457923126,"results":"178","hashOfConfig":"149"},{"size":2091,"mtime":1614454000763,"results":"179","hashOfConfig":"149"},{"size":3493,"mtime":1613798560135,"results":"180","hashOfConfig":"149"},{"size":6268,"mtime":1614460836236,"results":"181","hashOfConfig":"149"},{"size":6164,"mtime":1611263464637,"results":"182","hashOfConfig":"149"},{"size":7221,"mtime":1614454658705,"results":"183","hashOfConfig":"149"},{"size":8326,"mtime":1614456348984,"results":"184","hashOfConfig":"149"},{"size":12506,"mtime":1613796043819,"results":"185","hashOfConfig":"149"},{"size":4526,"mtime":1610608252785,"results":"186","hashOfConfig":"149"},{"size":2817,"mtime":1613597173060,"results":"187","hashOfConfig":"149"},{"size":933,"mtime":1611703361114,"results":"188","hashOfConfig":"149"},{"size":1277,"mtime":1614365477358,"results":"189","hashOfConfig":"149"},{"size":2937,"mtime":1614360368892,"results":"190","hashOfConfig":"149"},{"size":3267,"mtime":1614360297852,"results":"191","hashOfConfig":"149"},{"size":3709,"mtime":1613597369908,"results":"192","hashOfConfig":"149"},{"size":3084,"mtime":1613796146594,"results":"193","hashOfConfig":"149"},{"size":4193,"mtime":1613799044154,"results":"194","hashOfConfig":"149"},{"size":8207,"mtime":1613594335283,"results":"195","hashOfConfig":"149"},{"size":3646,"mtime":1614405419172,"results":"196","hashOfConfig":"149"},{"size":5119,"mtime":1614407266925,"results":"197","hashOfConfig":"149"},{"size":3470,"mtime":1614363431823,"results":"198","hashOfConfig":"149"},{"size":805,"mtime":1613762660760,"results":"199","hashOfConfig":"149"},{"size":8847,"mtime":1613795539347,"results":"200","hashOfConfig":"149"},{"size":3709,"mtime":1613592841004,"results":"201","hashOfConfig":"149"},{"size":1511,"mtime":1613796596877,"results":"202","hashOfConfig":"149"},{"size":907,"mtime":1614305112161,"results":"203","hashOfConfig":"149"},{"size":7760,"mtime":1614489489531,"results":"204","hashOfConfig":"149"},{"size":735,"mtime":1614293278916,"results":"205","hashOfConfig":"149"},{"size":909,"mtime":1614284742592,"results":"206","hashOfConfig":"149"},{"size":5262,"mtime":1614508369366,"results":"207","hashOfConfig":"149"},{"size":3599,"mtime":1614489348200,"results":"208","hashOfConfig":"149"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"1df5qj0",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"214"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"214"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},"1e03mzw",{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"310"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"310"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"310"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"310"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"310"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"414"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"310"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"310"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"310"},"/projects/udemy/mern/frontend/src/reducers/productReducers.js",[],["438","439"],"/projects/udemy/mern/frontend/src/store.js",[],["440","441"],"/projects/udemy/mern/frontend/src/actions/productActions.js",[],"/projects/udemy/mern/frontend/src/screens/ProductScreen.js",[],"/projects/udemy/mern/frontend/src/screens/ProductListScreen.js",[],["442","443"],"/projects/udemy/mern/frontend/src/index.js",[],["444","445"],"/projects/udemy/mern/frontend/src/components/Product.js",[],["446","447"],"/projects/udemy/mern/frontend/src/screens/CartScreen.js",["448"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport { Row, Col, Image, Form, Button, Card, ListGroup } from \"react-bootstrap\"\nimport { cartAddItemAction, cartRemoveItemAction } from \"../actions/cartActions\"\nimport { useEffect } from \"react\"\nimport Meta from \"../components/Meta\"\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\")\n    }\n    if (productId) {\n      dispatch(cartAddItemAction(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = id => {\n    dispatch(cartRemoveItemAction(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\")\n  }\n\n  return (\n    <>\n      <Meta title=\"Shopping Cart | Woolunatics\" />\n      <h1>Shopping Cart</h1>\n      <Row>\n        <Col md={8}>\n          {cartItems.length === 0 ? (\n            <Message>\n              {\" \"}\n              Your cart is empty <br /> <Link to=\"/\">Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant=\"flush\">\n              {cartItems.map(item => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={3}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col>\n                      <Link to={`/products/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>€{item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control as=\"select\" value={item.qty} onChange={e => dispatch(cartAddItemAction(item.product, Number(e.target.value)))}>\n                        {[...Array(item.countInStock).keys()].map(x => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={1}>\n                      <Button variant=\"link\" type=\"button\" onClick={() => removeFromCartHandler(item.product)}>\n                        <i className=\"fas fa-trash text-danger\"></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h4>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h4>\n                <h6>€{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</h6>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                  Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default CartScreen\n","/projects/udemy/mern/frontend/src/screens/OrderScreen.js",[],"/projects/udemy/mern/frontend/src/screens/UserListScreen.js",[],["449","450"],"/projects/udemy/mern/frontend/src/screens/ProductEditScreen.js",["451","452","453","454"],"import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport { Form, Button, Row, Col, Image } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport FormField from \"../components/FormField\"\nimport { productDetailsAction, productUpdateAction } from \"../actions/productActions\"\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\"\nimport Meta from \"../components/Meta\"\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id\n  const dispatch = useDispatch()\n  const [name, setName] = useState(\"\")\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState(\"\")\n  const [brand, setBrand] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [countInStock, setCountInStock] = useState(0)\n  const [uploading, setUploading] = useState(false)\n  const [color, setColor] = useState(false)\n  const [weight, setWeight] = useState(false)\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  const productUpdate = useSelector(state => state.productUpdate)\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push(\"/admin/productlist\")\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(productDetailsAction(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setDescription(product.description)\n        setCountInStock(product.countInStock)\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate])\n\n  //\n  //\n  const uploadFileHandler = async e => {\n    const file = e.target.files\n    const formData = new FormData()\n    for (let i in file) {\n      if (typeof file[i] === \"object\") {\n        formData.append(\"image\", file[i])\n      }\n    }\n\n    setUploading(true)\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }\n      const { data } = await axios.post(\"/api/upload\", formData, config)\n      console.log(\"data: \", data)\n      setImage([...image, ...data.map(img => `/${img.path}`)])\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = e => {\n    console.log(\"submitHandler\")\n    e.preventDefault()\n    dispatch(\n      productUpdateAction({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock\n      })\n    )\n  }\n  const addColorWeight = () => {\n    console.log(\"addColorWeight\")\n  }\n  console.log(image)\n\n  return (\n    <>\n      <Meta title=\"Admin | Edit Product | Woolunatics\" />\n      <Row>\n        <Col md={4}>\n          <Link to=\"/admin/productList\" className=\"btn btn-light my-3\">\n            Back\n          </Link>\n          {image &&\n            image.map(i => (\n              <div key={i}>\n                {i}:\n                <Image src={i} alt={name} fluid />\n              </div>\n            ))}\n        </Col>\n        <Col>\n          <h1>Edit Product</h1>\n          {loadingUpdate && <Loader />}\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message variant=\"danger\">{error}</Message>\n          ) : (\n            <Form onSubmit={submitHandler}>\n              <FormField value={name} label=\"Name\" onChange={setName} />\n              <FormField value={price} label=\"Price\" onChange={setPrice} />\n              <FormField value={brand} label=\"Brand\" onChange={setBrand} />\n              <FormField value={category} label=\"Category\" onChange={setCategory} />\n              <FormField value={description} label=\"Description\" onChange={setDescription} />\n\n              <FormField value={countInStock} label=\"Count In Stock\" onChange={setCountInStock} />\n\n              <Form.Group controlId=\"color-weight\">\n                <Form.Label>Color</Form.Label>\n                <input type=\"text\" placeholder=\"Color\" />\n                <input type=\"text\" placeholder=\"Weight\" />\n                <button onClick={addColorWeight}>Add</button>\n                {/* <FormField value={color} label=\"Color\" onChange={setColor} /> */}\n              </Form.Group>\n\n              <Form.Group controlId=\"image-file\">\n                <Form.Label>Image</Form.Label>\n                <div>{image && image.map(i => <div key={i}>{i}</div>)}</div>\n                <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler} multiple accept=\"image/png, image/jpeg, image/jpg\"></Form.File>\n                {uploading && <Loader />}\n              </Form.Group>\n\n              <Button type=\"submit\" variant=\"primary\">\n                Save\n              </Button>\n            </Form>\n          )}\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/projects/udemy/mern/frontend/src/App.js",[],"/projects/udemy/mern/frontend/src/components/SearchBox.js",[],"/projects/udemy/mern/frontend/src/screens/HomeScreen.js",[],"/projects/udemy/mern/frontend/src/reducers/cartReducers.js",[],"/projects/udemy/mern/frontend/src/components/Footer.js",[],"/projects/udemy/mern/frontend/src/screens/RegisterScreen.js",[],"/projects/udemy/mern/frontend/src/screens/ShippingScreen.js",[],["455","456"],"/projects/udemy/mern/frontend/src/screens/PlaceOrderScreen.js",[],"/projects/udemy/mern/frontend/src/components/CheckoutSteps.js",[],["457","458"],"/projects/udemy/mern/frontend/src/constants/userConstants.js",[],["459","460"],"/projects/udemy/mern/frontend/src/actions/userActions.js",[],"/projects/udemy/mern/frontend/src/actions/cartActions.js",[],"/projects/udemy/mern/frontend/src/components/Paginate.js",[],["461","462"],"/projects/udemy/mern/frontend/src/constants/productConstants.js",[],"/projects/udemy/mern/frontend/src/screens/LoginScreen.js",[],"/projects/udemy/mern/frontend/src/screens/HowToScreen.js",[],"/projects/udemy/mern/frontend/src/screens/UserEditScreen.js",[],"/projects/udemy/mern/frontend/src/components/Message.js",[],"/projects/udemy/mern/frontend/src/components/ProductCarousel.js",[],"/projects/udemy/mern/frontend/src/constants/cartConstants.js",[],"/projects/udemy/mern/frontend/src/constants/orderConstants.js",[],"/projects/udemy/mern/frontend/src/actions/orderActions.js",[],"/projects/udemy/mern/frontend/src/screens/ProfileScreen.js",[],"/projects/udemy/mern/frontend/src/components/FormContainer.js",[],"/projects/udemy/mern/frontend/src/components/FormField.js",[],"/projects/udemy/mern/frontend/src/components/Meta.js",[],"/projects/udemy/mern/frontend/src/screens/AboutScreen.js",[],"/projects/udemy/mern/frontend/src/screens/OrderListScreen.js",[],"/projects/udemy/mern/frontend/src/screens/PaymentScreen.js",[],["463","464"],"/projects/udemy/mern/frontend/src/reducers/orderReducers.js",[],"/projects/udemy/mern/frontend/src/components/Loader.js",[],"/projects/udemy/mern/frontend/src/reducers/userReducers.js",[],"/projects/woolunatic/frontend/src/index.js",[],["465","466"],"/projects/woolunatic/frontend/src/store.js",[],"/projects/woolunatic/frontend/src/App.js",[],"/projects/woolunatic/frontend/src/reducers/productReducers.js",[],"/projects/woolunatic/frontend/src/reducers/orderReducers.js",[],"/projects/woolunatic/frontend/src/reducers/userReducers.js",[],"/projects/woolunatic/frontend/src/reducers/cartReducers.js",[],"/projects/woolunatic/frontend/src/components/Footer.js",[],"/projects/woolunatic/frontend/src/screens/CollectionScreen.js",["467"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Row, Col } from \"react-bootstrap\"\nimport Product from \"../components/Product/Product\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { listProducts } from \"../actions/productActions\"\nimport Meta from \"../components/Meta\"\nimport Filter from \"../components/Filter/Filter\"\n\nconst CollectionScreen = ({ match }) => {\n  const keyword = match.params.keyword\n  const category = match.params.category\n  const pageNumber = Number(match.params.pageNumber) || 1\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, error, success, products } = productList\n  const [filteredProducts, setFilteredProducts] = useState([])\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber, category))\n  }, [dispatch, keyword, pageNumber, category])\n\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <>\n        <h1>{keyword ? keyword.split(\"|\").join(\" | \") : match.params.category ? (match.params.category === \"cashmix\" ? \"Cachmere Mixes\" : match.params.category.split(\"-\").join(\" | \")) : \"All Yarns\"}</h1>\n        <Meta />\n        <div className=\"display-flex\">\n          <div className=\"filter-container\">\n            <Filter products={products} setFilteredProducts={setFilteredProducts} />\n          </div>\n          <div className=\"filtered-products-container\">\n            <Row>\n              {filteredProducts.map(product => (\n                <Col key={product._id} xs={4} sm={4} md={4} lg={3} xl={2} className=\"product-card-block\">\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n            {loading ? <Loader /> : <div className=\"text-center\">{/* <Button onClick={() => dispatch(listProducts(keyword, pageNumber + 1))} className=\"my-3 px-5 btn-success>\n                  Load More\n                </Button> */}</div>}\n          </div>\n        </div>\n      </>\n    </>\n  )\n}\n\nexport default CollectionScreen\n","/projects/woolunatic/frontend/src/screens/HomeScreen.js",[],"/projects/woolunatic/frontend/src/components/Header/Header.js",[],"/projects/woolunatic/frontend/src/screens/RegisterScreen.js",[],"/projects/woolunatic/frontend/src/screens/LoginScreen.js",[],"/projects/woolunatic/frontend/src/screens/ProfileScreen.js",[],"/projects/woolunatic/frontend/src/screens/AboutScreen.js",[],"/projects/woolunatic/frontend/src/screens/HowToScreen.js",[],"/projects/woolunatic/frontend/src/screens/ProductScreen/ProductScreen.js",["468"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Col, ListGroup, Row, Card, Button, Form } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport ImageGallery from \"react-image-gallery\"\nimport ReactHtmlParser from \"react-html-parser\"\nimport Rating from \"../../components/Rating/Rating\"\nimport { productDetailsAction, productCreateReviewAction } from \"../../actions/productActions\"\nimport Message from \"../../components/Message\"\nimport Loader from \"../../components/Loader\"\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_DELETE_RESET } from \"../../constants/productConstants\"\nimport Meta from \"../../components/Meta\"\nimport { TranslateToWeight } from \"../../components/Utils\"\nimport \"./ProductScreen.css\"\n\nconst ProductScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n  const productId = match.params.id\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(5)\n  const [comment, setComment] = useState(\"\")\n  const [initialImages, setInitialImages] = useState([])\n  const [inStockArr, setInStockArr] = useState([])\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  const productCreateReview = useSelector(state => state.productCreateReview)\n  const { loading: loadingCreateReview, error: errorCreateReview, success: successCreateReview } = productCreateReview\n  const noimage = \"/uploads/noimage/noimage.webp\"\n  const imgPath = \"/uploads/products/\"\n\n  const imagesForGallery = imageArray => {\n    let currentImages = []\n    imageArray.map(img => currentImages.push({ original: img, thumbnail: img }))\n    return currentImages\n  }\n\n  const checkImg = async (img, checkedImgArr) => {\n    await fetch(imgPath + img).then(res => {\n      if (res.ok) {\n        checkedImgArr.push(imgPath + img)\n      } else {\n        checkedImgArr.push(noimage)\n      }\n    })\n    setInitialImages([...imagesForGallery(checkedImgArr)])\n  }\n\n  useEffect(() => {\n    if (successCreateReview) {\n      setRating(0)\n      setComment(\"\")\n    }\n    if (!product || !product._id || product._id !== productId || successCreateReview) {\n      dispatch(productDetailsAction(productId))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n      dispatch({ type: PRODUCT_DELETE_RESET })\n    }\n    if (product && product.inStock) {\n      const arr = product.inStock\n        .split(\",\")\n        .map(el => Number(el.trim()))\n        .sort((a, b) => a - b)\n\n      setInStockArr([...arr])\n      if (arr.length === 1) {\n        setQty(arr[0])\n      }\n    }\n    if (product && Array.isArray(product.image) && product.image.length > 0) {\n      let checkedImgArr = []\n      product.image.map(img => checkImg(img, checkedImgArr))\n    } else {\n      setInitialImages([...imagesForGallery([noimage])])\n    }\n  }, [dispatch, successCreateReview, productId, product])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${productId}/${qty}`)\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(productCreateReviewAction(productId, { rating, comment }))\n  }\n\n  const showOptions = min => {\n    let values = []\n    let minLeftover = Math.ceil(((1500 / product.meterage) * 100) / 100) * 100\n    let maxVal = inStockArr[inStockArr.length - 1] - minLeftover\n    for (let i = min; i <= maxVal; i += 50) {\n      if (!inStockArr.includes(i)) {\n        values.push(i)\n      }\n    }\n    console.log(\n      \"total in Stock: \",\n      product.inStock.split(\",\").reduce((acc, el) => acc + Number(el), 0)\n    )\n    return values\n  }\n\n  const onChangeHandler = e => {\n    dispatch(productDetailsAction(productId))\n    setQty(e.target.value)\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} description={product.description} />\n          <div className=\"submenu\">\n            {userInfo && userInfo.isAdmin && (\n              <Link to={`/admin/product/${productId}/edit`} className=\"btn btn-success bg-blue my-3 px-5\">\n                <i className=\"fas fa-edit text-white\"></i> Edit\n              </Link>\n            )}\n          </div>\n\n          <div id=\"product-details\">\n            {/* ---------------------------Gallery--------------------------- */}\n\n            <div id=\"product-gallery\">\n              <ImageGallery items={initialImages} showPlayButton={false} showIndex={true} thumbnailPosition=\"left\" />\n            </div>\n\n            {/* ---------------------------Title--------------------------- */}\n\n            <div id=\"product-title\">\n              <h5 className=\"product-brand\">\n                <Link to={`/search/${product.brand}`}>{product.brand}</Link>\n              </h5>\n              <h2>{product.name}</h2>\n              {product.regular && <div className=\"badge badge-pill badge-primary\">regular</div>}\n              {product.novelty && <div className=\"badge badge-pill badge-success\">new</div>}\n              {product.inSale && <div className=\"badge badge-pill badge-danger\">sale</div>}\n              <div className=\"text-right mr-3\">\n                <a href=\"#review-section\">\n                  <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                </a>\n              </div>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Art:</Col>\n                    <Col className=\"text-capitalize\">{product.art}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Color:</Col>\n                    <Col className=\"text-capitalize\">{product.color}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Basic Color:</Col>\n                    <Col>\n                      <div className={`product_color bg-${product.colorWay}`} title={product.colorWay}></div>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Fibers:</Col>\n                    <Col>{product.fibers}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Meterage:</Col>\n                    <Col>{product.meterage}m / 100g</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>NM:</Col>\n                    <Col>{product.nm}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Yarn weight:</Col>\n                    <Col>{TranslateToWeight(product.meterage)} weight</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Category:</Col>\n                    <Col className=\"text-capitalize\">{product.category && product.category.split(\",\").join(\", \")}</Col>\n                  </Row>\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n\n            {/* ---------------------------Add--------------------------- */}\n\n            <div id=\"product-add\" className=\"mx-3\">\n              <Card border=\"light\">\n                <Form onSubmit={addToCartHandler}>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Price: </Col>\n                        <Col>€{product.price} / 100g</Col>\n                      </Row>\n\n                      {!product.outOfStock && (\n                        <Row>\n                          <Col>Weight:</Col>\n                          <Col>\n                            <Form.Group controlId=\"qty\">\n                              <Form.Control as=\"select\" className=\"order-select\" value={qty} onChange={onChangeHandler} required>\n                                <option key=\"0\" value=\"\">\n                                  Select...\n                                </option>\n                                {product.inStock &&\n                                  inStockArr.map((el, i) => (\n                                    <option key={i} value={el}>\n                                      {el}g cone\n                                    </option>\n                                  ))}\n\n                                {product.minimum &&\n                                  showOptions(product.minimum).map(el => (\n                                    <option key={el} value={el}>\n                                      {el}g\n                                    </option>\n                                  ))}\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                        </Row>\n                      )}\n                      <Row>\n                        <Col xl={12} xs={12}>\n                          <Button className=\"btn-block btn-success my-3\" type=\"submit\" disabled={product.outOfStock}>\n                            {!product.outOfStock ? \"Add to Cart\" : \"Out of Stock\"}\n                          </Button>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Form>\n              </Card>\n            </div>\n            {/* ---------------------------Description--------------------------- */}\n\n            <div id=\"product-description\">\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <div>{product.description && ReactHtmlParser(product.description)}</div>\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n\n            {/* ---------------------------Reviews-------------------------------- */}\n            <div id=\"product-reviews\">\n              <h2 className=\"my-3\" id=\"review-section\">\n                Reviews\n              </h2>\n              {product.reviews.length === 0 && <Message variant=\"warning\">No Reviews for this product</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map(review => (\n                  <ListGroup.Item key={review._id}>\n                    <div className=\"h6\">\n                      {review.name} | <small>{review.createdAt.substring(0, 10)}</small>\n                    </div>\n\n                    <Rating value={review.rating} />\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </div>\n\n            {/* ---------------------------Write a customer Review--------------------------- */}\n            <div id=\"product-write-review\" className=\"mx-3 my-3\">\n              <ListGroup>\n                <ListGroup.Item>\n                  <h3>Write a customer Review</h3>\n                  {loadingCreateReview && <Loader />}\n                  {successCreateReview && <Message variant=\"success\">Review submitted successfully</Message>}\n                  {errorCreateReview && <Message variant=\"danger\">{errorCreateReview}</Message>}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <div id=\"rating\">\n                          <input type=\"radio\" name=\"rating\" value=\"5\" id=\"5\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"5\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"4\" id=\"4\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"4\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"3\" id=\"3\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"3\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"2\" id=\"2\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"2\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"1\" id=\"1\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"1\">&#9734;</label>\n                        </div>\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Control as=\"textarea\" rows=\"5\" value={comment} onChange={e => setComment(e.target.value)} placeholder=\"Write your review here...\" required></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" className=\"btn-block btn-success my-3\" disabled={loadingCreateReview}>\n                        Submit a review\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"light\">\n                      Please <Link to=\"/login\">sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/projects/woolunatic/frontend/src/components/Message.js",[],"/projects/woolunatic/frontend/src/components/Loader.js",[],"/projects/woolunatic/frontend/src/components/Meta.js",[],"/projects/woolunatic/frontend/src/components/SearchBox.js",[],"/projects/woolunatic/frontend/src/components/FormContainer.js",[],"/projects/woolunatic/frontend/src/components/ImageLarge.js",[],"/projects/woolunatic/frontend/src/components/ImageUpload.js",[],"/projects/woolunatic/frontend/src/components/Paginate.js",[],"/projects/woolunatic/frontend/src/components/FormField.js",[],"/projects/woolunatic/frontend/src/components/OrderSummary.js",[],"/projects/woolunatic/frontend/src/constants/productConstants.js",[],"/projects/woolunatic/frontend/src/constants/userConstants.js",[],"/projects/woolunatic/frontend/src/constants/cartConstants.js",[],"/projects/woolunatic/frontend/src/constants/orderConstants.js",[],"/projects/woolunatic/frontend/src/components/Product/Product.js",[],"/projects/woolunatic/frontend/src/actions/cartActions.js",[],"/projects/woolunatic/frontend/src/actions/userActions.js",[],"/projects/woolunatic/frontend/src/actions/orderActions.js",[],"/projects/woolunatic/frontend/src/actions/productActions.js",[],"/projects/woolunatic/frontend/src/components/Filter/Filter.js",["469","470"],"import React, { useState, useEffect } from \"react\"\nimport { Card, Form, Button, ListGroup } from \"react-bootstrap\"\nimport { TranslateToWeight } from \"../Utils\"\nimport \"./Filter.css\"\n//\nconst Filter = ({ products, setFilteredProducts }) => {\n  const initialFilter = {\n    category: [],\n    brand: [],\n    price: 0,\n    priceMin: 0,\n    priceMax: 0,\n    length: 0,\n    lengthMin: 0,\n    lengthMax: 0,\n    colorWay: [],\n    regular: false\n  }\n\n  const [initialFilterData, setInitialFilterData] = useState(initialFilter)\n  const [filterState, setFilterState] = useState(initialFilter)\n  const [showFibers, setShowFibers] = useState(false)\n  const [showBrands, setShowBrands] = useState(false)\n\n  useEffect(() => {\n    const brandMap = {}\n    const brandArr = []\n    const categoryMap = { cashmere: 0, cashmix: 0, merino: 0, wool: 0, lambswool: 0, mohair: 0, camel: 0, alpaca: 0, yak: 0, angora: 0, cotton: 0, linen: 0, silk: 0, fantasy: 0, pailettes: 0 }\n    const categoryArr = []\n    const colorWayMap = { white: 0, natural: 0, beige: 0, yellow: 0, orange: 0, red: 0, pink: 0, purple: 0, blue: 0, green: 0, gray: 0, brown: 0, black: 0, multicolor: 0 }\n    const colorWayArr = []\n    let priceMinVar = 0\n    let priceMaxVar = 0\n    let lengthMinVar = 0\n    let lengthMaxVar = 0\n\n    products.map(product => {\n      if (priceMinVar === 0) priceMinVar = Number(product.price)\n      if (Number(product.price) < Number(priceMinVar)) priceMinVar = Number(product.price)\n      if (product.price > priceMaxVar) priceMaxVar = product.price\n      if (lengthMinVar === 0) lengthMinVar = Number(product.meterage)\n      if (Number(product.meterage) < Number(lengthMinVar)) lengthMinVar = Number(product.meterage)\n      if (product.meterage > lengthMaxVar) lengthMaxVar = product.meterage\n\n      checkIfExists(colorWayMap, product.colorWay.trim().toLowerCase())\n      checkIfExists(brandMap, product.brand.trim())\n      return product.category.split(\",\").map(cat => {\n        return checkIfExists(categoryMap, cat.trim().toLowerCase())\n      })\n    })\n\n    Object.keys(categoryMap).map(key => categoryArr.push([key, categoryMap[key]]))\n    Object.keys(colorWayMap).map(key => colorWayArr.push([key, colorWayMap[key]]))\n    Object.keys(brandMap).map(key => brandArr.push([key, brandMap[key]]))\n    let brandArrSorted = brandArr.sort((a, b) => (a[0] > b[0] ? 1 : -1))\n\n    setInitialFilterData({\n      category: [...categoryArr],\n      brand: [...brandArrSorted],\n      price: priceMaxVar,\n      priceMin: priceMinVar,\n      priceMax: priceMaxVar,\n      length: lengthMaxVar,\n      lengthMin: lengthMinVar,\n      lengthMax: lengthMaxVar,\n      colorWay: [...colorWayArr],\n      regular: false\n    })\n    setFilterState({ ...initialFilter, price: priceMaxVar, length: lengthMaxVar })\n    setFilteredProducts(products)\n  }, [products])\n\n  useEffect(() => {\n    let newProds = multiPropsFilter(products, filterState)\n    setFilteredProducts(newProds)\n  }, [products, filterState])\n\n  const multiPropsFilter = (productsToFilter, filters) => {\n    const filterKeys = Object.keys(filters)\n    return productsToFilter.filter(product => {\n      return filterKeys.every(key => {\n        if (typeof filters[key] === \"boolean\") {\n          if (filters[key] === true) {\n            return product[key] === true\n          } else {\n            return true\n          }\n        }\n        if (!filters[key].length) {\n          return true\n        }\n        if (key === \"price\") return product[key] <= filters[key]\n        if (key === \"length\") return product.meterage <= filters[key]\n        if (typeof product[key] === \"string\" && product[key].includes(\",\")) {\n          return product[key].split(\",\").some(keyEle => filters[key].includes(keyEle))\n        }\n\n        return filters[key].includes(product[key])\n      })\n    })\n  }\n\n  const checkIfExists = (mapOfValues, value) => {\n    if (mapOfValues[value]) {\n      mapOfValues[value] = mapOfValues[value] + 1\n    } else {\n      mapOfValues[value] = 1\n    }\n  }\n\n  const onChangeStateHandler = (e, field) => {\n    setFilterState({ ...filterState, [field]: e.target.value })\n  }\n\n  const handleBoolean = (e, field) => {\n    setFilterState({ ...filterState, [field]: e.target.checked })\n  }\n\n  const clearFilterHandler = () => {\n    setFilterState({ ...initialFilter, price: initialFilterData.priceMax, length: initialFilterData.lengthMax })\n    setFilteredProducts(products)\n  }\n\n  const handleToggle = (value, cat) => {\n    const currentIndex = filterState[cat].indexOf(value)\n    const copyFilterState = [...filterState[cat]]\n    if (currentIndex === -1) {\n      copyFilterState.push(value)\n    } else {\n      copyFilterState.splice(currentIndex, 1)\n    }\n    setFilterState({\n      ...filterState,\n      [cat]: [...copyFilterState]\n    })\n  }\n\n  return (\n    <>\n      <div className=\"text-center\">{products && <h6>total {products.length} yarns</h6>}</div>\n      <Card className=\"filter\">\n        <Card.Header>\n          <Button onClick={clearFilterHandler} className=\"btn-success\" block>\n            <nobr>Clear filter</nobr>\n          </Button>\n          <Card.Title as=\"h4\" className=\"text-center\">\n            Filter Yarns\n          </Card.Title>\n        </Card.Header>\n\n        <Form>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Form.Group controlId=\"priceRange\">\n                <Form.Label as=\"h5\">Price, €/100g</Form.Label>\n                <Form.Control min={initialFilterData.priceMin} max={initialFilterData.priceMax} step={0.5} type=\"range\" onChange={e => onChangeStateHandler(e, \"price\")} value={filterState.price} />\n                <div className=\"label-comment\">\n                  <div>\n                    <small>€{initialFilterData.priceMin}</small>\n                  </div>\n                  <div>\n                    {initialFilterData.priceMin}-{filterState.price}\n                  </div>\n                  <div>\n                    <small>€{initialFilterData.priceMax}</small>\n                  </div>\n                </div>\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"fibersRange\">\n                <Form.Label as=\"h5\">Fiber Content</Form.Label>\n                {initialFilterData.category &&\n                  initialFilterData.category\n                    .filter(fib => fib[1] > 0)\n                    .map((fib, i) => (\n                      <div key={fib[0]} className={i > 5 && !showFibers ? \"display-none\" : \"display-block\"}>\n                        <Form.Check //\n                          type=\"checkbox\"\n                          className=\"custom-checkbox\"\n                          id={fib[0]}\n                          label={\n                            fib[0] === \"cashmix\" //\n                              ? `cashmere mix (${fib[1]})`\n                              : fib[0] === \"camel\"\n                              ? `camel hair (${fib[1]})`\n                              : `${fib[0]} (${fib[1]})`\n                          }\n                          onChange={() => handleToggle(fib[0], \"category\")}\n                          checked={filterState.category.includes(fib[0])}\n                        />\n                      </div>\n                    ))}\n                {initialFilterData.category.filter(fib => fib[1] > 0).length > 5 && (\n                  <div>\n                    <small>\n                      {!showFibers ? (\n                        <div className=\"link-primary py-2\" onClick={() => setShowFibers(true)}>\n                          show more...\n                        </div>\n                      ) : (\n                        <div className=\"link-primary py-2\" onClick={() => setShowFibers(false)}>\n                          show less...\n                        </div>\n                      )}\n                    </small>\n                  </div>\n                )}\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"lengthRange\">\n                <Form.Label as=\"h5\">Weight</Form.Label>\n                <div className=\"label-comment\">\n                  <div>{/* <small>{TranslateToWeight(initialFilterData.lengthMin)}</small> */}</div>\n                  <div className=\"mx-2\">\n                    <nobr>\n                      <small>{TranslateToWeight(initialFilterData.lengthMin)}</small> - {TranslateToWeight(filterState.length)}\n                    </nobr>\n                  </div>\n                  <div>\n                    <small></small>\n                  </div>\n                </div>\n                <Form.Control min={initialFilterData.lengthMin} max={initialFilterData.lengthMax} step={10} type=\"range\" onChange={e => onChangeStateHandler(e, \"length\")} value={filterState.length} />\n                <div className=\"label-comment\">\n                  <div>\n                    <small>{initialFilterData.lengthMin}m</small>\n                  </div>\n                  <div className=\"mx-2\">\n                    <nobr>\n                      {initialFilterData.lengthMin}-{filterState.length}\n                    </nobr>\n                  </div>\n                  <div>\n                    <small>{initialFilterData.lengthMax}m</small>\n                  </div>\n                </div>\n                <Form.Label as=\"h5\" className=\"mt-3\">\n                  Length, m/100g\n                </Form.Label>\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"colorRange\">\n                <Form.Label as=\"h5\">Color</Form.Label>\n                <div className=\"color\">\n                  {initialFilterData.colorWay &&\n                    initialFilterData.colorWay.map(\n                      col =>\n                        col[1] > 0 && (\n                          <Form.Check //\n                            key={col[0]}\n                            className={col[0]}\n                            type=\"checkbox\"\n                            id={col[0]}\n                            title={`${col[0]} (${col[1]})`}\n                            label={`${col[0]} (${col[1]})`}\n                            disabled={col[1] === 0}\n                            onChange={() => handleToggle(col[0], \"colorWay\")}\n                            checked={filterState.colorWay.includes(col[0])}\n                          />\n                        )\n                    )}\n                </div>\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"brandsRange\">\n                <Form.Label as=\"h5\">Brand</Form.Label>\n                {initialFilterData.brand &&\n                  initialFilterData.brand.map((brand, i) => (\n                    <div key={brand[0]} className={i > 5 && !showBrands ? \"display-none\" : \"display-block\"}>\n                      <Form.Check //\n                        type=\"checkbox\"\n                        className=\"custom-checkbox\"\n                        id={brand[0]}\n                        label={`${brand[0]} (${brand[1]})`}\n                        onChange={() => handleToggle(brand[0], \"brand\")}\n                        checked={filterState.brand.includes(brand[0])}\n                      />\n                    </div>\n                  ))}\n                {initialFilterData.brand.filter(fib => fib[1] > 0).length > 5 && (\n                  <div>\n                    <small>\n                      {!showBrands ? (\n                        <div className=\"link-primary py-2\" onClick={() => setShowBrands(true)}>\n                          show more...\n                        </div>\n                      ) : (\n                        <div className=\"link-primary py-2\" onClick={() => setShowBrands(false)}>\n                          show less...\n                        </div>\n                      )}\n                    </small>\n                  </div>\n                )}\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"regularRange\">\n                <Form.Check //\n                  type=\"checkbox\"\n                  className=\"custom-checkbox\"\n                  id=\"regular\"\n                  label=\"Regular\"\n                  onChange={e => handleBoolean(e, \"regular\")}\n                  checked={filterState.regular}\n                />\n              </Form.Group>\n            </ListGroup.Item>\n          </ListGroup>\n        </Form>\n      </Card>\n    </>\n  )\n}\n\nexport default Filter\n","/projects/woolunatic/frontend/src/components/Promo/Promo.js",[],"/projects/woolunatic/frontend/src/components/ProductListItem/ProductListItem.js",[],"/projects/woolunatic/frontend/src/components/Rating/Rating.js",[],"/projects/woolunatic/frontend/src/components/CheckoutSteps.js",[],"/projects/woolunatic/frontend/src/screens/admin/UserListScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/UserEditScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/ProductListScreen.js",["471"],"import React, { useEffect } from \"react\"\nimport { Route } from \"react-router-dom\"\nimport { Table, Button } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { listProducts, productCreateAction } from \"../../actions/productActions\"\nimport { PRODUCT_CREATE_RESET, PRODUCT_DELETE_RESET } from \"../../constants/productConstants\"\nimport Message from \"../../components/Message\"\nimport Loader from \"../../components/Loader\"\nimport Paginate from \"../../components/Paginate\"\nimport Meta from \"../../components/Meta\"\nimport ProductListItem from \"../../components/ProductListItem/ProductListItem\"\n\nconst ProductListScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n  const pageNumber = match.params.pageNumber || 1\n\n  const productList = useSelector(state => state.productList)\n  const { loading, error, products, page, pages } = productList\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n  const productDelete = useSelector(state => state.productDelete)\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n  const productCreate = useSelector(state => state.productCreate)\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push(\"/login\")\n    }\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts(\"\", pageNumber))\n    }\n  }, [dispatch, history, userInfo, successCreate, createdProduct, pageNumber, successDelete])\n\n  const createProductHandler = () => {\n    dispatch(productCreateAction())\n  }\n\n  return (\n    <>\n      <h2>Products</h2>\n\n      <div className=\"submenu\">\n        <Button className=\"btn btn-success bg-blue my-3 px-5\" onClick={createProductHandler}>\n          <i className=\"fas fa-plus mr-1\"></i> Create Product\n        </Button>\n      </div>\n      {(loadingDelete || loadingCreate) && <Loader />}\n      {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n      {successDelete && <Message variant=\"success\">Product was deleted</Message>}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title=\"Admin | Product List | Woolunatics\" />\n          <Table striped hover responsive className=\"table-sm product-list\">\n            <thead>\n              <tr>\n                <th>art</th>\n                <th className=\"product-list-item_image\">image</th>\n                <th>brand</th>\n                <th>name</th>\n                <th>color</th>\n                <th>colorWay</th>\n                <th>category</th>\n                <th>fibers</th>\n                <th>nm</th>\n                <th>meterage</th>\n                <th>price</th>\n                <th className=\"product-list-max\">inStock</th>\n                <th>minimum</th>\n                <th>tag</th>\n                {/* <th>edit</th> */}\n                <th>delete</th>\n                <th>outOfStock</th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map(product => (\n                <Route key={product._id} render={({ history }) => <ProductListItem history={history} key={product._id} product={product} />} />\n              ))}\n            </tbody>\n          </Table>\n          <Paginate isAdmin list=\"productlist\" pages={pages} page={page} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","/projects/woolunatic/frontend/src/screens/admin/OrderListScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/AdminScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/ProductEditScreen.js",["472"],"import React, { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Form, Button, Row, Col } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport ReactQuill from \"react-quill\"\nimport Message from \"../../components/Message\"\nimport Loader from \"../../components/Loader\"\nimport { FormFieldAsRow, FormFieldAsRowCheckbox } from \"../../components/FormField\"\nimport { productDeleteAction, productDetailsAction, productUpdateAction } from \"../../actions/productActions\"\nimport { PRODUCT_DETAILS_RESET, PRODUCT_DELETE_RESET, PRODUCT_UPDATE_RESET } from \"../../constants/productConstants\"\nimport Meta from \"../../components/Meta\"\nimport ImageLarge from \"../../components/ImageLarge\"\nimport ImageUpload from \"../../components/ImageUpload\"\nimport \"react-quill/dist/quill.snow.css\"\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id\n  const dispatch = useDispatch()\n  const [brand, setBrand] = useState(\"\")\n  const [name, setName] = useState(\"\")\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [outOfStock, setOutOfStock] = useState(false)\n  const [uploading, setUploading] = useState(false)\n  const [fibers, setFibers] = useState(\"\")\n  const [meterage, setMeterage] = useState(0)\n  const [minimum, setMinimum] = useState(0)\n  const [color, setColor] = useState(\"\")\n  const [colorWay, setColorWay] = useState(\"\")\n  const [inStock, setInStock] = useState(\"\") //here is string\n  const [art, setArt] = useState(\"\")\n  const [nm, setNm] = useState(\"\")\n  const [novelty, setNovelty] = useState(false)\n  const [inSale, setInSale] = useState(false)\n  const [regular, setRegular] = useState(false)\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  const productUpdate = useSelector(state => state.productUpdate)\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n  const productDelete = useSelector(state => state.productDelete)\n  const { loading: loadingProductDelete, error: errorProductDelete, success: successProductDelete, message: messageProductDelete } = productDelete\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      dispatch({ type: PRODUCT_DETAILS_RESET })\n      history.push(`/products/${productId}`)\n    } else if (successProductDelete) {\n      successDeleteProductHandler()\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(productDetailsAction(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setDescription(product.description)\n        setInStock(product.inStock)\n        setOutOfStock(product.outOfStock)\n        setFibers(product.fibers)\n        setMeterage(product.meterage)\n        setMinimum(product.minimum)\n        setColor(product.color)\n        setColorWay(product.colorWay)\n        setArt(product.art)\n        setNm(product.nm)\n        setNovelty(product.novelty)\n        setInSale(product.inSale)\n        setRegular(product.regular)\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate, successProductDelete])\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(\n      productUpdateAction({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        inStock,\n        outOfStock,\n        fibers,\n        meterage,\n        minimum,\n        color,\n        colorWay,\n        art,\n        nm,\n        novelty,\n        inSale,\n        regular\n      })\n    )\n  }\n\n  const deleteProductHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(productDeleteAction(id))\n    }\n  }\n\n  const successDeleteProductHandler = () => {\n    setTimeout(() => {\n      dispatch({ type: PRODUCT_DELETE_RESET })\n      history.push(`/yarns`)\n    }, 5000)\n  }\n\n  return (\n    <>\n      <Meta title=\"Admin | Edit Product | Woolunatics\" />\n      {successProductDelete ? (\n        <Message variant=\"success\" onClose={successDeleteProductHandler}>\n          {messageProductDelete}\n        </Message>\n      ) : (\n        <>\n          <div className=\"submenu\">\n            <Link to={`/products/${productId}`} className=\"btn btn-success bg-blue my-3 px-5\">\n              <i className=\"fas fa-eye text-white\"></i> Preview\n            </Link>\n          </div>\n\n          <Row>\n            <Col md={4} sm={12}>\n              <ImageLarge image={image} name={`${brand} ${name}`} />\n            </Col>\n            <Col md={8}>\n              <h2>Edit Product</h2>\n              {loadingUpdate && <Loader />}\n              {loadingProductDelete && <Loader />}\n\n              {errorProductDelete && <Message variant=\"danger\">{errorProductDelete}</Message>}\n              {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n              {loading ? (\n                <Loader />\n              ) : error ? (\n                <Message variant=\"danger\">{error}</Message>\n              ) : (\n                <Form onSubmit={submitHandler} id=\"ProductEditForm\">\n                  <FormFieldAsRow value={art} label=\"Art.\" onChange={setArt} />\n                  <FormFieldAsRow value={name} label=\"Name\" onChange={setName} />\n                  <FormFieldAsRow value={brand} label=\"Brand\" onChange={setBrand} />\n                  <FormFieldAsRow value={color} label=\"Color\" onChange={setColor} />\n                  <FormFieldAsRow value={colorWay} label=\"ColorWay\" onChange={setColorWay} />\n                  <FormFieldAsRow value={category} label=\"Category\" onChange={setCategory} />\n                  <FormFieldAsRow value={fibers} label=\"Fibers\" onChange={setFibers} />\n                  <FormFieldAsRow value={nm} label=\"Nm\" onChange={setNm} />\n                  <FormFieldAsRow value={meterage} label=\"Meterage\" onChange={setMeterage} />\n                  <FormFieldAsRow value={price} comment=\"Whole number or separated by dot\" label=\"Price\" onChange={setPrice} />\n                  <FormFieldAsRow value={minimum} comment=\"'0' if no winding\" label=\"Minimum\" onChange={setMinimum} />\n                  <FormFieldAsRow value={inStock} comment=\"Cones weights, separated by commas\" label=\"In Stock\" onChange={setInStock} />\n                  <FormFieldAsRowCheckbox value={regular} label=\"Regular\" onChange={setRegular} />\n                  <FormFieldAsRowCheckbox value={novelty} label=\"Novelty\" onChange={setNovelty} />\n                  <FormFieldAsRowCheckbox value={inSale} label=\"inSale\" onChange={setInSale} />\n                  <FormFieldAsRowCheckbox value={outOfStock} label=\"OutOfStock\" onChange={setOutOfStock} />\n\n                  <ImageUpload image={image} setImage={setImage} uploading={uploading} setUploading={setUploading} />\n\n                  <Form.Group controlId=\"Description\">\n                    <Row>\n                      <Col sm=\"2\">\n                        <Form.Label>Description:</Form.Label>\n                      </Col>\n                      <Col>\n                        <ReactQuill value={description} onChange={setDescription} />\n                      </Col>\n                    </Row>\n                  </Form.Group>\n\n                  <Row>\n                    <Col sm=\"2\"></Col>\n                    <Col>\n                      <Button type=\"submit\" className=\"btn-success my-3 px-5\">\n                        Save Changes\n                      </Button>\n                    </Col>\n                    <Col className=\"text-right\">\n                      <Button title=\"Delete\" className=\"btn-danger bg-red my-3 px-5\" onClick={() => deleteProductHandler(product._id)}>\n                        <i className=\"fas fa-trash text-white\"></i> Delete product\n                      </Button>\n                    </Col>\n                  </Row>\n                </Form>\n              )}\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/projects/woolunatic/frontend/src/components/ShippingSection.js",[],"/projects/woolunatic/frontend/src/components/PaymentSection/PaymentSection.js",[],"/projects/woolunatic/frontend/src/components/CartItem.jsx",[],["473","474"],"/projects/woolunatic/frontend/src/components/OrderWeightsSummary.js",[],"/projects/woolunatic/frontend/src/components/ProductsBulkUpload.js",[],"/projects/woolunatic/frontend/src/components/ImagesBulkUpload.js",[],"/projects/woolunatic/frontend/src/components/Utils.js",[],"/projects/woolunatic/frontend/src/screens/order/PaymentScreen.js",[],"/projects/woolunatic/frontend/src/screens/order/CartLayout.js",["475","476"],"import React, { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Row, Col, ListGroup, Button } from \"react-bootstrap\"\nimport { getCartAction, startCheckoutAction } from \"../../actions/cartActions\"\nimport Message from \"../../components/Message\"\nimport Meta from \"../../components/Meta\"\nimport CartItem from \"../../components/CartItem\"\nimport OrderSummary from \"../../components/OrderSummary\"\nimport CheckoutSteps from \"../../components/CheckoutSteps\"\nimport OrderWeightsSummary from \"../../components/OrderWeightsSummary\"\nimport Loader from \"../../components/Loader\"\nimport { createOrderAction } from \"../../actions/orderActions\"\nimport { ORDER_CREATE_RESET } from \"../../constants/orderConstants\"\n\nconst CartLayout = ({ history, redirect, checkoutStep, title, children, loading, error }) => {\n  const dispatch = useDispatch()\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n  const cart = useSelector(state => state.cart)\n  const { loading: cartLoading, error: cartError, items, success: cartSuccess } = cart\n  const [summary, setSummary] = useState({})\n  const [warning, setWarning] = useState(false)\n  const [checkout, setCheckout] = useState(false)\n  const [isChecked, setIsChecked] = useState(false)\n\n  const orderCreate = useSelector(state => state.orderCreate)\n  const { loading: orderLoading, order, success, error: orderError } = orderCreate\n\n  if (!userInfo && redirect) {\n    history.push(`/login?redirect=${redirect}`)\n  }\n\n  // ------------------------------------------------------------------------Calculating totals\n  useEffect(() => {\n    if (items && items.length > 0) {\n      let taxPrice = 0\n      let shippingPrice = 0\n      const addDecimals = num => (Math.round(num * 100) / 100).toFixed(2)\n      const itemsPrice = addDecimals(items.reduce((acc, item) => acc + (item.price * item.qty) / 100, 0))\n      if (checkoutStep === \"payment\") {\n        taxPrice = addDecimals(Number((21.0 * itemsPrice) / 100))\n        shippingPrice = addDecimals(itemsPrice > 100 ? 26 : 26)\n      }\n      const totalPrice = (Number(itemsPrice) + Number(taxPrice) + Number(shippingPrice)).toFixed(2)\n      const itemsWeight = items.reduce((acc, item) => acc + item.qty, 0)\n      const totalWeight = itemsWeight + 300 + items.length * 40\n      setSummary({ itemsPrice, taxPrice, shippingPrice, totalPrice, itemsWeight, totalWeight })\n    }\n  }, [items, checkoutStep, dispatch])\n  // -----------------------------------------------------------------------/Calculating totals\n\n  useEffect(() => {\n    if (checkoutStep === \"cart\") {\n      if (items && items.length > 0) {\n        console.log(\"if (items && items.length > 0)\")\n        let res = items.filter(it => it.message && it.message.length > 0)\n        console.log(\"items.filter(it => it.message && it.message.length > 0): \", res)\n\n        if (res.length > 0) {\n          console.log(\"-------------IF (res.length > 0)\")\n          setWarning(true)\n          console.log(\"setWarning(true)\")\n          setCheckout(false)\n          console.log(\"setCheckout(false)\")\n        } else {\n          console.log(\"-------------ELSE\")\n          setWarning(false)\n          console.log(\"setWarning(false)\")\n          if (checkout) {\n            setIsChecked(true)\n          }\n          console.log(\"setIsChecked(true)\")\n        }\n      }\n    }\n  }, [items])\n\n  useEffect(() => {\n    if (cartSuccess && isChecked && checkout) {\n      console.log(\"GO CKECKOUT, NO WARNING, IS CHECKED: \")\n      dispatch(startCheckoutAction())\n      history.push(\"/checkout/shipping\")\n    }\n  }, [checkout, isChecked, cartSuccess])\n\n  useEffect(() => {\n    if (success && order) {\n      dispatch({ type: ORDER_CREATE_RESET })\n      history.push(`/checkout/payorder/${order._id}`)\n    }\n  }, [order, history, success, dispatch])\n\n  // ----------------------------------------------------------------------- Handlers\n  const checkoutHandler = () => {\n    console.log(\"checkoutHandler: dispatch(getCartAction())\")\n    dispatch(getCartAction())\n    console.log(\"checkoutHandler: setCheckout(true)\")\n    setIsChecked(false)\n    setCheckout(true)\n  }\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrderAction({\n        orderItems: cart.items,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: summary.itemsPrice,\n        taxPrice: summary.taxPrice,\n        shippingPrice: summary.shippingPrice,\n        totalPrice: summary.totalPrice,\n        itemsWeight: summary.itemsWeight,\n        totalWeight: summary.totalWeight\n      })\n    )\n  }\n  // ----------------------------------------------------------------------- /Handlers\n\n  return (\n    <>\n      <Meta title={`${title} | Woolunatics`} />\n      <h2>{title}</h2>\n      {checkoutStep !== \"cart\" && <CheckoutSteps step={checkoutStep} />}\n\n      {(loading || cartLoading || orderLoading) && <Loader />}\n\n      {(error || cartError || orderError) && (\n        <Message variant=\"warning\" className=\"py-4\" onClose={() => dispatch(getCartAction())}>\n          {error || cartError || orderError}\n        </Message>\n      )}\n\n      {!error && !cartError && !loading && !cartLoading && (!items || items.length === 0) && (\n        <Message variant=\"success\" className=\"py-4\">\n          Your cart is empty <br /> <Link to=\"/yarns\">Go Shopping...</Link>\n        </Message>\n      )}\n\n      {warning && (\n        <Message variant=\"danger\" className=\"py-4\">\n          Some of items in your cart are out of stock\n        </Message>\n      )}\n\n      {items && items.length > 0 && !(cartSuccess && isChecked && checkout) && (\n        <Row>\n          <Col md={9} xs={12}>\n            {/* --------------------------------------------------------------------SHIPPING/PAYMENT CONTENT */}\n            {children && children}\n\n            {/* --------------------------------------------------------------------ORDER ITEMS */}\n            <ListGroup variant=\"flush\">\n              {checkoutStep !== \"cart\" && (\n                <ListGroup.Item>\n                  <h4>ORDER ITEMS</h4>\n                </ListGroup.Item>\n              )}\n              {items.map(item => item && <CartItem key={`${item._id}-${item.qty}`} item={item} qty={item.qty} setCheckout={setCheckout} checkoutStep={checkoutStep} />)}\n            </ListGroup>\n\n            {/* --------------------------------------------------------------------ORDER WEIGHT SUMMARY */}\n            <OrderWeightsSummary order={summary} />\n          </Col>\n          <Col>\n            {/* --------------------------------------------------------------------ORDER SUMMARY */}\n            <OrderSummary cart={summary} summary={summary} items={items} checkoutStep={checkoutStep} history={history} userInfo={userInfo}>\n              {checkoutStep === \"cart\" && (\n                <ListGroup.Item>\n                  <Button type=\"button\" className=\"btn-block btn-success my-3\" disabled={items.length === 0 || warning} onClick={checkoutHandler}>\n                    Checkout\n                  </Button>\n                  <Button type=\"button\" className=\"btn-block btn-success bg-blue my-3\" onClick={() => history.push(\"/yarns\")}>\n                    Continue shopping\n                  </Button>\n                </ListGroup.Item>\n              )}\n              {checkoutStep === \"payment\" && cart.paymentMethod && (\n                <ListGroup.Item>\n                  <Button className=\"btn-success btn-block\" onClick={() => placeOrderHandler()}>\n                    Place order and pay\n                  </Button>\n                </ListGroup.Item>\n              )}\n            </OrderSummary>\n          </Col>\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default CartLayout\n","/projects/woolunatic/frontend/src/screens/order/ShippingScreen.js",[],"/projects/woolunatic/frontend/src/screens/order/CartScreen.js",[],"/projects/woolunatic/frontend/src/screens/order/OrderScreen.js",["477"],"import React, { useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Row, Col, ListGroup, Button, Table } from \"react-bootstrap\"\nimport Loader from \"../../components/Loader\"\nimport Message from \"../../components/Message\"\nimport { getOrderDetailsAction, deliverOrderAction } from \"../../actions/orderActions\"\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from \"../../constants/orderConstants\"\nimport Meta from \"../../components/Meta\"\nimport OrderSummary from \"../../components/OrderSummary\"\nimport OrderWeightsSummary from \"../../components/OrderWeightsSummary\"\nimport ShippingSection from \"../../components/ShippingSection\"\nimport PaymentSection from \"../../components/PaymentSection/PaymentSection\"\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n  const dispatch = useDispatch()\n  const checkoutStep = \"order\"\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector(state => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.pushState(\"/login\")\n    }\n    if (!order || order._id !== orderId || successDeliver || successPay) {\n      dispatch(getOrderDetailsAction(orderId))\n    }\n    if (successDeliver) {\n      dispatch({ type: ORDER_DELIVER_RESET })\n    }\n    if (successPay) {\n      dispatch({ type: ORDER_PAY_RESET })\n    }\n  }, [dispatch, order, orderId, successDeliver, successPay, history, userInfo])\n\n  const deliverHandler = () => {\n    dispatch(deliverOrderAction(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <>\n      <Meta title={`Order #${order._id} | Woolunatics`} />\n      <h2>Order #{order._id}</h2>\n      <Row>\n        <Col md={9} xs={12}>\n          <ListGroup variant=\"flush\">\n            <ShippingSection cart={order} history={history} checkoutStep={checkoutStep} userInfo={userInfo} />\n            <PaymentSection order={order} history={history} checkoutStep={checkoutStep} userInfo={userInfo} />\n\n            <ListGroup.Item>\n              <h4>ORDER ITEMS</h4>\n            </ListGroup.Item>\n          </ListGroup>\n          {order.orderItems.length === 0 ? (\n            <Message>Order is empty.</Message>\n          ) : (\n            <>\n              <Table bordered hover responsive className=\"table-sm order-summary-table mb-0\">\n                <thead>\n                  <tr>\n                    <th>brand</th>\n                    <th>name</th>\n                    <th>color</th>\n                    <th>fibers,%</th>\n                    <th>weight,g</th>\n                    <th>m/100gr</th>\n                    <th>€/100gr</th>\n                    <th>price</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {order.orderItems.map((item, i) => (\n                    <tr key={i}>\n                      <td>{item.brand}</td>\n                      <td>\n                        <Link target=\"_blank\" rel=\"noreferrer\" to={`/products/${item.product}`} className=\"text-capitalize\">\n                          {item.name}\n                        </Link>\n                      </td>\n                      <td className=\"text-capitalize\">{item.color.replace(/_+/g, \" \")}</td>\n                      <td>{item.fibers}</td>\n                      <td>{item.qty}</td>\n                      <td>{item.meterage}</td>\n                      <td>€{item.price.toFixed(2)}</td>\n                      <td>€{((item.qty * item.price) / 100).toFixed(2)}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n\n              <OrderWeightsSummary order={order} />\n            </>\n          )}\n          {userInfo && userInfo.isAdmin && (\n            <div className=\"jumbotron text-right\">\n              <h5>Test user for PayPal payments : sb-k30x54012881@personal.example.com</h5>\n              <h5>Test password for PayPal payments : {`RHU*Oy6{`}</h5>\n            </div>\n          )}\n        </Col>\n        <Col>\n          <OrderSummary cart={order} items={order.orderItems} error={error}>\n            {!order.isPaid && order.paymentMethod && (\n              <ListGroup.Item>\n                <Button className=\"btn-success btn-block\" onClick={() => history.push(`/checkout/payorder/${order._id}`)}>\n                  Pay Order\n                </Button>\n              </ListGroup.Item>\n            )}\n\n            {loadingDeliver && <Loader />}\n            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n              <ListGroup.Item>\n                <Button type=\"button\" className=\"btn-success btn-block bg-blue\" onClick={deliverHandler}>\n                  Mark as shipped\n                </Button>\n              </ListGroup.Item>\n            )}\n          </OrderSummary>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","/projects/woolunatic/frontend/src/screens/order/PayOrderScreen.js",["478"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { PayPalButton } from \"react-paypal-button-v2\"\nimport axios from \"axios\"\nimport { Col, Row } from \"react-bootstrap\"\nimport FormContainer from \"../../components/FormContainer\"\nimport { getOrderDetailsAction, molliePayAction, payOrderAction } from \"../../actions/orderActions\"\nimport Message from \"../../components/Message\"\nimport Loader from \"../../components/Loader\"\nimport { ORDER_CREATE_RESET, ORDER_PAY_RESET } from \"../../constants/orderConstants\"\n// import { USER_DETAILS_RESET } from \"../../constants/userConstants\"\n// import { CART_CLEAR_ITEMS } from \"../../constants/cartConstants\"\nimport \"./PayOrderScreen.css\"\nimport { cartClearAction } from \"../../actions/cartActions\"\n\nconst PayOrderScreen = ({ match, history }) => {\n  const dispatch = useDispatch()\n  const orderId = match.params.id\n\n  const orderDetails = useSelector(state => state.orderDetails)\n  const { order, loading, error, success } = orderDetails\n\n  const orderPay = useSelector(state => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n  const [sdkReady, setSdkReady] = useState(false)\n\n  useEffect(() => {\n    if (!order) {\n      dispatch(getOrderDetailsAction(orderId))\n    } else {\n      console.log(\"order: \", order)\n\n      if (order && order.paymentMethod === \"PayPal\") {\n        const addPayPalScript = async () => {\n          console.log(\"addPayPalScript\")\n          const { data: clientId } = await axios.get(\"/api/config/paypal\")\n          const script = document.createElement(\"script\")\n          script.type = \"text/javascript\"\n          script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n          script.async = true\n          script.onload = () => {\n            setSdkReady(true)\n            console.log(\"setSdkReady(true)\")\n          }\n          document.body.appendChild(script)\n        }\n\n        console.log(\"order.paymentMethod: \", order.paymentMethod)\n\n        if (!successPay && !(order && order.isPaid)) {\n          if (!window.paypal) {\n            addPayPalScript()\n          } else {\n            setSdkReady(true)\n          }\n        }\n        if (successPay) {\n          dispatch(cartClearAction())\n          dispatch({ type: ORDER_CREATE_RESET })\n          history.push(`/orders/${order._id}`)\n        }\n      }\n\n      if (order && order.paymentMethod === \"Mollie\") {\n        const data = {\n          totalPrice: order.totalPrice,\n          currency: \"EUR\",\n          description: `Order #${order._id}`,\n          orderId: order._id\n        }\n        console.log(\"proceedMollyPayment: data: \", data)\n        dispatch(molliePayAction(data))\n      }\n    }\n  }, [order, history, successPay, dispatch, orderId])\n\n  useEffect(() => {\n    console.log(\"--------------sdkReady: \", sdkReady)\n  }, [sdkReady])\n\n  const payPalPaymentHandler = paymentResult => {\n    console.log(\"successPaymentHandler\")\n    console.log(\"paymentResult: \", paymentResult)\n    dispatch(payOrderAction(order._id, paymentResult))\n  }\n\n  return (\n    <FormContainer className=\"hide-container pt-6\">\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {success && order && order.paymentMethod === \"mollie\" && <Loader />}\n\n      <Row>\n        <Col md={3}></Col>\n        <Col md={6}>\n          {(loading || loadingPay || !sdkReady) && <Loader />}\n          {sdkReady && <PayPalButton amount={order.totalPrice} onSuccess={payPalPaymentHandler} />}\n        </Col>\n        <Col md={3}></Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default PayOrderScreen\n",{"ruleId":"479","replacedBy":"480"},{"ruleId":"481","replacedBy":"482"},{"ruleId":"479","replacedBy":"483"},{"ruleId":"481","replacedBy":"484"},{"ruleId":"479","replacedBy":"485"},{"ruleId":"481","replacedBy":"486"},{"ruleId":"479","replacedBy":"487"},{"ruleId":"481","replacedBy":"488"},{"ruleId":"479","replacedBy":"489"},{"ruleId":"481","replacedBy":"490"},{"ruleId":"491","severity":1,"message":"492","line":26,"column":6,"nodeType":"493","endLine":26,"endColumn":32,"suggestions":"494"},{"ruleId":"479","replacedBy":"495"},{"ruleId":"481","replacedBy":"496"},{"ruleId":"497","severity":1,"message":"498","line":24,"column":10,"nodeType":"499","messageId":"500","endLine":24,"endColumn":15},{"ruleId":"497","severity":1,"message":"501","line":24,"column":17,"nodeType":"499","messageId":"500","endLine":24,"endColumn":25},{"ruleId":"497","severity":1,"message":"502","line":25,"column":10,"nodeType":"499","messageId":"500","endLine":25,"endColumn":16},{"ruleId":"497","severity":1,"message":"503","line":25,"column":18,"nodeType":"499","messageId":"500","endLine":25,"endColumn":27},{"ruleId":"479","replacedBy":"504"},{"ruleId":"481","replacedBy":"505"},{"ruleId":"479","replacedBy":"506"},{"ruleId":"481","replacedBy":"507"},{"ruleId":"479","replacedBy":"508"},{"ruleId":"481","replacedBy":"509"},{"ruleId":"479","replacedBy":"510"},{"ruleId":"481","replacedBy":"511"},{"ruleId":"479","replacedBy":"512"},{"ruleId":"481","replacedBy":"513"},{"ruleId":"479","replacedBy":"514"},{"ruleId":"481","replacedBy":"515"},{"ruleId":"497","severity":1,"message":"516","line":17,"column":27,"nodeType":"499","messageId":"500","endLine":17,"endColumn":34},{"ruleId":"491","severity":1,"message":"517","line":77,"column":6,"nodeType":"493","endLine":77,"endColumn":57,"suggestions":"518"},{"ruleId":"491","severity":1,"message":"519","line":71,"column":6,"nodeType":"493","endLine":71,"endColumn":16,"suggestions":"520"},{"ruleId":"491","severity":1,"message":"521","line":76,"column":6,"nodeType":"493","endLine":76,"endColumn":29,"suggestions":"522"},{"ruleId":"497","severity":1,"message":"523","line":6,"column":32,"nodeType":"499","messageId":"500","endLine":6,"endColumn":52},{"ruleId":"491","severity":1,"message":"524","line":77,"column":6,"nodeType":"493","endLine":77,"endColumn":82,"suggestions":"525"},{"ruleId":"479","replacedBy":"526"},{"ruleId":"481","replacedBy":"527"},{"ruleId":"491","severity":1,"message":"528","line":77,"column":6,"nodeType":"493","endLine":77,"endColumn":13,"suggestions":"529"},{"ruleId":"491","severity":1,"message":"530","line":85,"column":6,"nodeType":"493","endLine":85,"endColumn":40,"suggestions":"531"},{"ruleId":"497","severity":1,"message":"532","line":24,"column":20,"nodeType":"499","messageId":"500","endLine":24,"endColumn":30},{"ruleId":"497","severity":1,"message":"533","line":10,"column":30,"nodeType":"499","messageId":"500","endLine":10,"endColumn":45},"no-native-reassign",["534"],"no-negated-in-lhs",["535"],["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["536"],["534"],["535"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","'setColor' is assigned a value but never used.","'weight' is assigned a value but never used.","'setWeight' is assigned a value but never used.",["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],"'success' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkImg'. Either include it or remove the dependency array.",["537"],"React Hook useEffect has missing dependencies: 'initialFilter' and 'setFilteredProducts'. Either include them or remove the dependency array. If 'setFilteredProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"React Hook useEffect has a missing dependency: 'setFilteredProducts'. Either include it or remove the dependency array. If 'setFilteredProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["539"],"'PRODUCT_DELETE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'successDeleteProductHandler'. Either include it or remove the dependency array.",["540"],["534"],["535"],"React Hook useEffect has missing dependencies: 'checkout' and 'checkoutStep'. Either include them or remove the dependency array.",["541"],"React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["542"],"'loadingPay' is assigned a value but never used.","'ORDER_PAY_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},"Update the dependencies array to be: [dispatch, history, productId, qty, userInfo]",{"range":"557","text":"558"},"Update the dependencies array to be: [dispatch, successCreateReview, productId, product, checkImg]",{"range":"559","text":"560"},"Update the dependencies array to be: [initialFilter, products, setFilteredProducts]",{"range":"561","text":"562"},"Update the dependencies array to be: [products, filterState, setFilteredProducts]",{"range":"563","text":"564"},"Update the dependencies array to be: [product, dispatch, productId, history, successUpdate, successProductDelete, successDeleteProductHandler]",{"range":"565","text":"566"},"Update the dependencies array to be: [checkout, checkoutStep, items]",{"range":"567","text":"568"},"Update the dependencies array to be: [checkout, isChecked, cartSuccess, dispatch, history]",{"range":"569","text":"570"},[925,951],"[dispatch, history, productId, qty, userInfo]",[2950,3001],"[dispatch, successCreateReview, productId, product, checkImg]",[2804,2814],"[initialFilter, products, setFilteredProducts]",[2935,2958],"[products, filterState, setFilteredProducts]",[3353,3429],"[product, dispatch, productId, history, successUpdate, successProductDelete, successDeleteProductHandler]",[3416,3423],"[checkout, checkoutStep, items]",[3643,3677],"[checkout, isChecked, cartSuccess, dispatch, history]"]