[{"/projects/udemy/mern/frontend/src/reducers/productReducers.js":"1","/projects/udemy/mern/frontend/src/store.js":"2","/projects/udemy/mern/frontend/src/actions/productActions.js":"3","/projects/udemy/mern/frontend/src/screens/ProductScreen.js":"4","/projects/udemy/mern/frontend/src/screens/ProductListScreen.js":"5","/projects/udemy/mern/frontend/src/index.js":"6","/projects/udemy/mern/frontend/src/components/Product.js":"7","/projects/udemy/mern/frontend/src/screens/CartScreen.js":"8","/projects/udemy/mern/frontend/src/screens/OrderScreen.js":"9","/projects/udemy/mern/frontend/src/screens/UserListScreen.js":"10","/projects/udemy/mern/frontend/src/screens/ProductEditScreen.js":"11","/projects/udemy/mern/frontend/src/App.js":"12","/projects/udemy/mern/frontend/src/components/SearchBox.js":"13","/projects/udemy/mern/frontend/src/screens/HomeScreen.js":"14","/projects/udemy/mern/frontend/src/reducers/cartReducers.js":"15","/projects/udemy/mern/frontend/src/components/Footer.js":"16","/projects/udemy/mern/frontend/src/screens/RegisterScreen.js":"17","/projects/udemy/mern/frontend/src/screens/ShippingScreen.js":"18","/projects/udemy/mern/frontend/src/screens/PlaceOrderScreen.js":"19","/projects/udemy/mern/frontend/src/components/CheckoutSteps.js":"20","/projects/udemy/mern/frontend/src/constants/userConstants.js":"21","/projects/udemy/mern/frontend/src/actions/userActions.js":"22","/projects/udemy/mern/frontend/src/actions/cartActions.js":"23","/projects/udemy/mern/frontend/src/components/Paginate.js":"24","/projects/udemy/mern/frontend/src/constants/productConstants.js":"25","/projects/udemy/mern/frontend/src/screens/LoginScreen.js":"26","/projects/udemy/mern/frontend/src/screens/HowToScreen.js":"27","/projects/udemy/mern/frontend/src/screens/UserEditScreen.js":"28","/projects/udemy/mern/frontend/src/components/Message.js":"29","/projects/udemy/mern/frontend/src/components/ProductCarousel.js":"30","/projects/udemy/mern/frontend/src/constants/cartConstants.js":"31","/projects/udemy/mern/frontend/src/constants/orderConstants.js":"32","/projects/udemy/mern/frontend/src/actions/orderActions.js":"33","/projects/udemy/mern/frontend/src/screens/ProfileScreen.js":"34","/projects/udemy/mern/frontend/src/components/FormContainer.js":"35","/projects/udemy/mern/frontend/src/components/FormField.js":"36","/projects/udemy/mern/frontend/src/components/Meta.js":"37","/projects/udemy/mern/frontend/src/screens/AboutScreen.js":"38","/projects/udemy/mern/frontend/src/screens/OrderListScreen.js":"39","/projects/udemy/mern/frontend/src/screens/PaymentScreen.js":"40","/projects/udemy/mern/frontend/src/reducers/orderReducers.js":"41","/projects/udemy/mern/frontend/src/components/Loader.js":"42","/projects/udemy/mern/frontend/src/reducers/userReducers.js":"43","/projects/woolunatic/frontend/src/index.js":"44","/projects/woolunatic/frontend/src/store.js":"45","/projects/woolunatic/frontend/src/App.js":"46","/projects/woolunatic/frontend/src/reducers/productReducers.js":"47","/projects/woolunatic/frontend/src/reducers/orderReducers.js":"48","/projects/woolunatic/frontend/src/reducers/userReducers.js":"49","/projects/woolunatic/frontend/src/reducers/cartReducers.js":"50","/projects/woolunatic/frontend/src/components/Footer.js":"51","/projects/woolunatic/frontend/src/screens/CollectionScreen.js":"52","/projects/woolunatic/frontend/src/screens/HomeScreen.js":"53","/projects/woolunatic/frontend/src/components/Header/Header.js":"54","/projects/woolunatic/frontend/src/screens/RegisterScreen.js":"55","/projects/woolunatic/frontend/src/screens/LoginScreen.js":"56","/projects/woolunatic/frontend/src/screens/ProfileScreen.js":"57","/projects/woolunatic/frontend/src/screens/PlaceOrderScreen.js":"58","/projects/woolunatic/frontend/src/screens/AboutScreen.js":"59","/projects/woolunatic/frontend/src/screens/ShippingScreen.js":"60","/projects/woolunatic/frontend/src/screens/PaymentScreen.js":"61","/projects/woolunatic/frontend/src/screens/HowToScreen.js":"62","/projects/woolunatic/frontend/src/screens/ProductScreen/ProductScreen.js":"63","/projects/woolunatic/frontend/src/screens/OrderScreen.js":"64","/projects/woolunatic/frontend/src/screens/CartScreen.js":"65","/projects/woolunatic/frontend/src/components/Message.js":"66","/projects/woolunatic/frontend/src/components/Loader.js":"67","/projects/woolunatic/frontend/src/components/Meta.js":"68","/projects/woolunatic/frontend/src/components/SearchBox.js":"69","/projects/woolunatic/frontend/src/components/FormContainer.js":"70","/projects/woolunatic/frontend/src/components/ImageLarge.js":"71","/projects/woolunatic/frontend/src/components/ImageUpload.js":"72","/projects/woolunatic/frontend/src/components/Paginate.js":"73","/projects/woolunatic/frontend/src/components/FormField.js":"74","/projects/woolunatic/frontend/src/components/OrderSummary.js":"75","/projects/woolunatic/frontend/src/constants/productConstants.js":"76","/projects/woolunatic/frontend/src/constants/userConstants.js":"77","/projects/woolunatic/frontend/src/constants/cartConstants.js":"78","/projects/woolunatic/frontend/src/constants/orderConstants.js":"79","/projects/woolunatic/frontend/src/components/Product/Product.js":"80","/projects/woolunatic/frontend/src/actions/cartActions.js":"81","/projects/woolunatic/frontend/src/actions/userActions.js":"82","/projects/woolunatic/frontend/src/actions/orderActions.js":"83","/projects/woolunatic/frontend/src/actions/productActions.js":"84","/projects/woolunatic/frontend/src/components/Filter/Filter.js":"85","/projects/woolunatic/frontend/src/components/Promo/Promo.js":"86","/projects/woolunatic/frontend/src/components/ProductListItem/ProductListItem.js":"87","/projects/woolunatic/frontend/src/components/CartItems.jsx":"88","/projects/woolunatic/frontend/src/components/Rating/Rating.js":"89","/projects/woolunatic/frontend/src/components/PaymentMollie.js":"90","/projects/woolunatic/frontend/src/components/CheckoutSteps.js":"91","/projects/woolunatic/frontend/src/components/PaymentStatus.js":"92","/projects/woolunatic/frontend/src/components/TranslateToWeight.js":"93","/projects/woolunatic/frontend/src/screens/admin/UserListScreen.js":"94","/projects/woolunatic/frontend/src/screens/admin/UserEditScreen.js":"95","/projects/woolunatic/frontend/src/screens/admin/ProductListScreen.js":"96","/projects/woolunatic/frontend/src/screens/admin/OrderListScreen.js":"97","/projects/woolunatic/frontend/src/screens/admin/AdminScreen.js":"98","/projects/woolunatic/frontend/src/screens/admin/ProductEditScreen.js":"99","/projects/woolunatic/frontend/src/components/ShippingSection.js":"100","/projects/woolunatic/frontend/src/components/PaymentSection/PaymentSection.js":"101","/projects/woolunatic/frontend/src/components/CartItem.jsx":"102","/projects/woolunatic/frontend/src/components/Payment/Payment.js":"103","/projects/woolunatic/frontend/src/components/OrderWeightsSummary.js":"104","/projects/woolunatic/frontend/src/screens/HideScreen.js":"105"},{"size":3611,"mtime":1607757776579,"results":"106","hashOfConfig":"107"},{"size":2451,"mtime":1607759690843,"results":"108","hashOfConfig":"107"},{"size":4464,"mtime":1607759657883,"results":"109","hashOfConfig":"107"},{"size":8644,"mtime":1607991719281,"results":"110","hashOfConfig":"107"},{"size":4564,"mtime":1607986229318,"results":"111","hashOfConfig":"107"},{"size":565,"mtime":1607743974810,"results":"112","hashOfConfig":"107"},{"size":755,"mtime":1607989479050,"results":"113","hashOfConfig":"107"},{"size":3494,"mtime":1607987184851,"results":"114","hashOfConfig":"107"},{"size":6694,"mtime":1607849013406,"results":"115","hashOfConfig":"107"},{"size":2799,"mtime":1607849397458,"results":"116","hashOfConfig":"107"},{"size":5354,"mtime":1607991078855,"results":"117","hashOfConfig":"107"},{"size":2892,"mtime":1607767220956,"results":"118","hashOfConfig":"107"},{"size":663,"mtime":1607751140992,"results":"119","hashOfConfig":"107"},{"size":1567,"mtime":1608093621326,"results":"120","hashOfConfig":"107"},{"size":1087,"mtime":1607029233705,"results":"121","hashOfConfig":"107"},{"size":347,"mtime":1607756146400,"results":"122","hashOfConfig":"107"},{"size":2923,"mtime":1607849274553,"results":"123","hashOfConfig":"107"},{"size":2595,"mtime":1607849308569,"results":"124","hashOfConfig":"107"},{"size":4817,"mtime":1607849107192,"results":"125","hashOfConfig":"107"},{"size":1359,"mtime":1607581089193,"results":"126","hashOfConfig":"107"},{"size":1427,"mtime":1607546186485,"results":"127","hashOfConfig":"107"},{"size":5222,"mtime":1607546930129,"results":"128","hashOfConfig":"107"},{"size":1232,"mtime":1607917946631,"results":"129","hashOfConfig":"107"},{"size":651,"mtime":1607755819261,"results":"130","hashOfConfig":"107"},{"size":1496,"mtime":1607757559837,"results":"131","hashOfConfig":"107"},{"size":2096,"mtime":1607848915205,"results":"132","hashOfConfig":"107"},{"size":1802,"mtime":1607848890420,"results":"133","hashOfConfig":"107"},{"size":2955,"mtime":1607849356751,"results":"134","hashOfConfig":"107"},{"size":236,"mtime":1606886391919,"results":"135","hashOfConfig":"107"},{"size":1335,"mtime":1608093343864,"results":"136","hashOfConfig":"107"},{"size":235,"mtime":1607029033180,"results":"137","hashOfConfig":"107"},{"size":1186,"mtime":1607671329711,"results":"138","hashOfConfig":"107"},{"size":4248,"mtime":1607663692039,"results":"139","hashOfConfig":"107"},{"size":4973,"mtime":1607849233664,"results":"140","hashOfConfig":"107"},{"size":331,"mtime":1606963583322,"results":"141","hashOfConfig":"107"},{"size":386,"mtime":1607646760910,"results":"142","hashOfConfig":"107"},{"size":388,"mtime":1607848805718,"results":"143","hashOfConfig":"107"},{"size":2443,"mtime":1607848774270,"results":"144","hashOfConfig":"107"},{"size":2937,"mtime":1607848951292,"results":"145","hashOfConfig":"107"},{"size":1829,"mtime":1607849084658,"results":"146","hashOfConfig":"107"},{"size":3253,"mtime":1607657489417,"results":"147","hashOfConfig":"107"},{"size":322,"mtime":1606886227821,"results":"148","hashOfConfig":"107"},{"size":3294,"mtime":1607546810510,"results":"149","hashOfConfig":"107"},{"size":566,"mtime":1609976901232,"results":"150","hashOfConfig":"151"},{"size":2536,"mtime":1610827827629,"results":"152","hashOfConfig":"151"},{"size":3616,"mtime":1612605532676,"results":"153","hashOfConfig":"151"},{"size":4207,"mtime":1610790271114,"results":"154","hashOfConfig":"151"},{"size":4059,"mtime":1612593659948,"results":"155","hashOfConfig":"151"},{"size":3375,"mtime":1612593653922,"results":"156","hashOfConfig":"151"},{"size":1868,"mtime":1612500438776,"results":"157","hashOfConfig":"151"},{"size":666,"mtime":1612589650500,"results":"158","hashOfConfig":"151"},{"size":2445,"mtime":1612515612129,"results":"159","hashOfConfig":"151"},{"size":1497,"mtime":1612552557786,"results":"160","hashOfConfig":"151"},{"size":5948,"mtime":1612551960488,"results":"161","hashOfConfig":"151"},{"size":2939,"mtime":1612339796162,"results":"162","hashOfConfig":"151"},{"size":2112,"mtime":1612339606686,"results":"163","hashOfConfig":"151"},{"size":5656,"mtime":1612339667505,"results":"164","hashOfConfig":"151"},{"size":3512,"mtime":1612585462165,"results":"165","hashOfConfig":"151"},{"size":2695,"mtime":1612467647439,"results":"166","hashOfConfig":"151"},{"size":2755,"mtime":1612340608665,"results":"167","hashOfConfig":"151"},{"size":1854,"mtime":1612339721669,"results":"168","hashOfConfig":"151"},{"size":1961,"mtime":1612467625109,"results":"169","hashOfConfig":"151"},{"size":12629,"mtime":1612483612663,"results":"170","hashOfConfig":"151"},{"size":5860,"mtime":1612604167225,"results":"171","hashOfConfig":"151"},{"size":7513,"mtime":1612605737464,"results":"172","hashOfConfig":"151"},{"size":236,"mtime":1606886391919,"results":"173","hashOfConfig":"151"},{"size":322,"mtime":1606886227821,"results":"174","hashOfConfig":"151"},{"size":388,"mtime":1607848805718,"results":"175","hashOfConfig":"151"},{"size":714,"mtime":1612340396077,"results":"176","hashOfConfig":"151"},{"size":335,"mtime":1609746369423,"results":"177","hashOfConfig":"151"},{"size":467,"mtime":1610607796875,"results":"178","hashOfConfig":"151"},{"size":2549,"mtime":1610172099586,"results":"179","hashOfConfig":"151"},{"size":667,"mtime":1609317644457,"results":"180","hashOfConfig":"151"},{"size":1336,"mtime":1612341164287,"results":"181","hashOfConfig":"151"},{"size":1811,"mtime":1612604844569,"results":"182","hashOfConfig":"151"},{"size":1789,"mtime":1610790126812,"results":"183","hashOfConfig":"151"},{"size":1476,"mtime":1608106568424,"results":"184","hashOfConfig":"151"},{"size":389,"mtime":1612500326913,"results":"185","hashOfConfig":"151"},{"size":1505,"mtime":1611254450556,"results":"186","hashOfConfig":"151"},{"size":3318,"mtime":1612484353506,"results":"187","hashOfConfig":"151"},{"size":2685,"mtime":1612506738707,"results":"188","hashOfConfig":"151"},{"size":6164,"mtime":1611263464637,"results":"189","hashOfConfig":"151"},{"size":6108,"mtime":1612571011349,"results":"190","hashOfConfig":"151"},{"size":5714,"mtime":1612488223010,"results":"191","hashOfConfig":"151"},{"size":12635,"mtime":1612486824393,"results":"192","hashOfConfig":"151"},{"size":4526,"mtime":1610608252785,"results":"193","hashOfConfig":"151"},{"size":2979,"mtime":1611166801084,"results":"194","hashOfConfig":"151"},{"size":479,"mtime":1612509092257,"results":"195","hashOfConfig":"151"},{"size":933,"mtime":1611703361114,"results":"196","hashOfConfig":"151"},{"size":1184,"mtime":1612555941219,"results":"197","hashOfConfig":"151"},{"size":1188,"mtime":1612561330295,"results":"198","hashOfConfig":"151"},{"size":189,"mtime":1611717866012,"results":"199","hashOfConfig":"151"},{"size":850,"mtime":1612552023443,"results":"200","hashOfConfig":"151"},{"size":2819,"mtime":1612402303748,"results":"201","hashOfConfig":"151"},{"size":2883,"mtime":1612402386904,"results":"202","hashOfConfig":"151"},{"size":3932,"mtime":1612402669872,"results":"203","hashOfConfig":"151"},{"size":3088,"mtime":1612402358799,"results":"204","hashOfConfig":"151"},{"size":10539,"mtime":1612551894358,"results":"205","hashOfConfig":"151"},{"size":6642,"mtime":1612402538016,"results":"206","hashOfConfig":"151"},{"size":2867,"mtime":1612551613641,"results":"207","hashOfConfig":"151"},{"size":5861,"mtime":1612592981205,"results":"208","hashOfConfig":"151"},{"size":2270,"mtime":1612551726948,"results":"209","hashOfConfig":"151"},{"size":5759,"mtime":1612563521889,"results":"210","hashOfConfig":"151"},{"size":795,"mtime":1612602273083,"results":"211","hashOfConfig":"151"},{"size":337,"mtime":1612605608834,"results":"212","hashOfConfig":"151"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},"1df5qj0",{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"218"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"218"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"218"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},"1e03mzw",{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"314"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"314"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"314"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"314"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"314"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"314"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/projects/udemy/mern/frontend/src/reducers/productReducers.js",[],["442","443"],"/projects/udemy/mern/frontend/src/store.js",[],["444","445"],"/projects/udemy/mern/frontend/src/actions/productActions.js",[],"/projects/udemy/mern/frontend/src/screens/ProductScreen.js",[],"/projects/udemy/mern/frontend/src/screens/ProductListScreen.js",[],["446","447"],"/projects/udemy/mern/frontend/src/index.js",[],["448","449"],"/projects/udemy/mern/frontend/src/components/Product.js",[],["450","451"],"/projects/udemy/mern/frontend/src/screens/CartScreen.js",["452"],"import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport { Row, Col, Image, Form, Button, Card, ListGroup } from \"react-bootstrap\"\nimport { cartAddItemAction, cartRemoveItemAction } from \"../actions/cartActions\"\nimport { useEffect } from \"react\"\nimport Meta from \"../components/Meta\"\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1\n  const dispatch = useDispatch()\n  const cart = useSelector(state => state.cart)\n  const { cartItems } = cart\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\")\n    }\n    if (productId) {\n      dispatch(cartAddItemAction(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = id => {\n    dispatch(cartRemoveItemAction(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\")\n  }\n\n  return (\n    <>\n      <Meta title=\"Shopping Cart | Woolunatics\" />\n      <h1>Shopping Cart</h1>\n      <Row>\n        <Col md={8}>\n          {cartItems.length === 0 ? (\n            <Message>\n              {\" \"}\n              Your cart is empty <br /> <Link to=\"/\">Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant=\"flush\">\n              {cartItems.map(item => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={3}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col>\n                      <Link to={`/products/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>€{item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control as=\"select\" value={item.qty} onChange={e => dispatch(cartAddItemAction(item.product, Number(e.target.value)))}>\n                        {[...Array(item.countInStock).keys()].map(x => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={1}>\n                      <Button variant=\"link\" type=\"button\" onClick={() => removeFromCartHandler(item.product)}>\n                        <i className=\"fas fa-trash text-danger\"></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h4>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h4>\n                <h6>€{cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}</h6>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button type=\"button\" className=\"btn-block\" disabled={cartItems.length === 0} onClick={checkoutHandler}>\n                  Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default CartScreen\n","/projects/udemy/mern/frontend/src/screens/OrderScreen.js",[],"/projects/udemy/mern/frontend/src/screens/UserListScreen.js",[],["453","454"],"/projects/udemy/mern/frontend/src/screens/ProductEditScreen.js",["455","456","457","458"],"import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport { Form, Button, Row, Col, Image } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport FormField from \"../components/FormField\"\nimport { productDetailsAction, productUpdateAction } from \"../actions/productActions\"\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\"\nimport Meta from \"../components/Meta\"\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id\n  const dispatch = useDispatch()\n  const [name, setName] = useState(\"\")\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState(\"\")\n  const [brand, setBrand] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [countInStock, setCountInStock] = useState(0)\n  const [uploading, setUploading] = useState(false)\n  const [color, setColor] = useState(false)\n  const [weight, setWeight] = useState(false)\n\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  const productUpdate = useSelector(state => state.productUpdate)\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push(\"/admin/productlist\")\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(productDetailsAction(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setDescription(product.description)\n        setCountInStock(product.countInStock)\n      }\n    }\n  }, [product, dispatch, productId, history, successUpdate])\n\n  //\n  //\n  const uploadFileHandler = async e => {\n    const file = e.target.files\n    const formData = new FormData()\n    for (let i in file) {\n      if (typeof file[i] === \"object\") {\n        formData.append(\"image\", file[i])\n      }\n    }\n\n    setUploading(true)\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }\n      const { data } = await axios.post(\"/api/upload\", formData, config)\n      console.log(\"data: \", data)\n      setImage([...image, ...data.map(img => `/${img.path}`)])\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = e => {\n    console.log(\"submitHandler\")\n    e.preventDefault()\n    dispatch(\n      productUpdateAction({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock\n      })\n    )\n  }\n  const addColorWeight = () => {\n    console.log(\"addColorWeight\")\n  }\n  console.log(image)\n\n  return (\n    <>\n      <Meta title=\"Admin | Edit Product | Woolunatics\" />\n      <Row>\n        <Col md={4}>\n          <Link to=\"/admin/productList\" className=\"btn btn-light my-3\">\n            Back\n          </Link>\n          {image &&\n            image.map(i => (\n              <div key={i}>\n                {i}:\n                <Image src={i} alt={name} fluid />\n              </div>\n            ))}\n        </Col>\n        <Col>\n          <h1>Edit Product</h1>\n          {loadingUpdate && <Loader />}\n          {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message variant=\"danger\">{error}</Message>\n          ) : (\n            <Form onSubmit={submitHandler}>\n              <FormField value={name} label=\"Name\" onChange={setName} />\n              <FormField value={price} label=\"Price\" onChange={setPrice} />\n              <FormField value={brand} label=\"Brand\" onChange={setBrand} />\n              <FormField value={category} label=\"Category\" onChange={setCategory} />\n              <FormField value={description} label=\"Description\" onChange={setDescription} />\n\n              <FormField value={countInStock} label=\"Count In Stock\" onChange={setCountInStock} />\n\n              <Form.Group controlId=\"color-weight\">\n                <Form.Label>Color</Form.Label>\n                <input type=\"text\" placeholder=\"Color\" />\n                <input type=\"text\" placeholder=\"Weight\" />\n                <button onClick={addColorWeight}>Add</button>\n                {/* <FormField value={color} label=\"Color\" onChange={setColor} /> */}\n              </Form.Group>\n\n              <Form.Group controlId=\"image-file\">\n                <Form.Label>Image</Form.Label>\n                <div>{image && image.map(i => <div key={i}>{i}</div>)}</div>\n                <Form.File id=\"image-file\" label=\"Choose File\" custom onChange={uploadFileHandler} multiple accept=\"image/png, image/jpeg, image/jpg\"></Form.File>\n                {uploading && <Loader />}\n              </Form.Group>\n\n              <Button type=\"submit\" variant=\"primary\">\n                Save\n              </Button>\n            </Form>\n          )}\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/projects/udemy/mern/frontend/src/App.js",[],"/projects/udemy/mern/frontend/src/components/SearchBox.js",[],"/projects/udemy/mern/frontend/src/screens/HomeScreen.js",[],"/projects/udemy/mern/frontend/src/reducers/cartReducers.js",[],"/projects/udemy/mern/frontend/src/components/Footer.js",[],"/projects/udemy/mern/frontend/src/screens/RegisterScreen.js",[],"/projects/udemy/mern/frontend/src/screens/ShippingScreen.js",[],["459","460"],"/projects/udemy/mern/frontend/src/screens/PlaceOrderScreen.js",[],"/projects/udemy/mern/frontend/src/components/CheckoutSteps.js",[],["461","462"],"/projects/udemy/mern/frontend/src/constants/userConstants.js",[],["463","464"],"/projects/udemy/mern/frontend/src/actions/userActions.js",[],"/projects/udemy/mern/frontend/src/actions/cartActions.js",[],"/projects/udemy/mern/frontend/src/components/Paginate.js",[],["465","466"],"/projects/udemy/mern/frontend/src/constants/productConstants.js",[],"/projects/udemy/mern/frontend/src/screens/LoginScreen.js",[],"/projects/udemy/mern/frontend/src/screens/HowToScreen.js",[],"/projects/udemy/mern/frontend/src/screens/UserEditScreen.js",[],"/projects/udemy/mern/frontend/src/components/Message.js",[],"/projects/udemy/mern/frontend/src/components/ProductCarousel.js",[],"/projects/udemy/mern/frontend/src/constants/cartConstants.js",[],"/projects/udemy/mern/frontend/src/constants/orderConstants.js",[],"/projects/udemy/mern/frontend/src/actions/orderActions.js",[],"/projects/udemy/mern/frontend/src/screens/ProfileScreen.js",[],"/projects/udemy/mern/frontend/src/components/FormContainer.js",[],"/projects/udemy/mern/frontend/src/components/FormField.js",[],"/projects/udemy/mern/frontend/src/components/Meta.js",[],"/projects/udemy/mern/frontend/src/screens/AboutScreen.js",[],"/projects/udemy/mern/frontend/src/screens/OrderListScreen.js",[],"/projects/udemy/mern/frontend/src/screens/PaymentScreen.js",[],["467","468"],"/projects/udemy/mern/frontend/src/reducers/orderReducers.js",[],"/projects/udemy/mern/frontend/src/components/Loader.js",[],"/projects/udemy/mern/frontend/src/reducers/userReducers.js",[],"/projects/woolunatic/frontend/src/index.js",[],["469","470"],"/projects/woolunatic/frontend/src/store.js",[],"/projects/woolunatic/frontend/src/App.js",[],"/projects/woolunatic/frontend/src/reducers/productReducers.js",[],"/projects/woolunatic/frontend/src/reducers/orderReducers.js",[],"/projects/woolunatic/frontend/src/reducers/userReducers.js",[],"/projects/woolunatic/frontend/src/reducers/cartReducers.js",[],"/projects/woolunatic/frontend/src/components/Footer.js",[],"/projects/woolunatic/frontend/src/screens/CollectionScreen.js",["471"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Row, Col } from \"react-bootstrap\"\nimport Product from \"../components/Product/Product\"\nimport Message from \"../components/Message\"\nimport Loader from \"../components/Loader\"\nimport { listProducts } from \"../actions/productActions\"\nimport Meta from \"../components/Meta\"\nimport Filter from \"../components/Filter/Filter\"\n\nconst CollectionScreen = ({ match }) => {\n  console.log(match.params)\n  const keyword = match.params.keyword\n  const category = match.params.category\n  const pageNumber = Number(match.params.pageNumber) || 1\n  const dispatch = useDispatch()\n  const productList = useSelector(state => state.productList)\n  const { loading, error, success, products } = productList\n  const [filteredProducts, setFilteredProducts] = useState([])\n\n  // useEffect(() => {\n  //   console.log(\"CollectionScreen:useEffect-1\")\n  //   if (success) {\n  //     setFilteredProducts([...products])\n  //   }\n  // }, [products, success])\n\n  useEffect(() => {\n    console.log(\"CollectionScreen:useEffect-2\")\n    dispatch(listProducts(keyword, pageNumber, category))\n  }, [dispatch, keyword, pageNumber, category])\n\n  console.log(\"CollectionScreen:filteredProducts: \", filteredProducts)\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      <>\n        <h1>{keyword ? keyword.split(\"|\").join(\" | \") : match.params.category ? (match.params.category === \"cashmix\" ? \"Cachmere Mixes\" : match.params.category.split(\"-\").join(\" | \")) : \"All Yarns\"}</h1>\n        <Meta />\n        <div className=\"display-flex\">\n          <div className=\"filter-container\">\n            <Filter products={products} setFilteredProducts={setFilteredProducts} />\n          </div>\n          <div className=\"filtered-products-container\">\n            <Row>\n              {filteredProducts.map(product => (\n                <Col key={product._id} xs={4} sm={4} md={4} lg={3} xl={2} className=\"product-card-block\">\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n            {loading ? <Loader /> : <div className=\"text-center\">{/* <Button onClick={() => dispatch(listProducts(keyword, pageNumber + 1))} className=\"my-3 px-5 btn-success>\n                  Load More\n                </Button> */}</div>}\n          </div>\n        </div>\n      </>\n    </>\n  )\n}\n\nexport default CollectionScreen\n","/projects/woolunatic/frontend/src/screens/HomeScreen.js",[],"/projects/woolunatic/frontend/src/components/Header/Header.js",[],"/projects/woolunatic/frontend/src/screens/RegisterScreen.js",[],"/projects/woolunatic/frontend/src/screens/LoginScreen.js",[],"/projects/woolunatic/frontend/src/screens/ProfileScreen.js",[],"/projects/woolunatic/frontend/src/screens/PlaceOrderScreen.js",[],"/projects/woolunatic/frontend/src/screens/AboutScreen.js",[],"/projects/woolunatic/frontend/src/screens/ShippingScreen.js",[],"/projects/woolunatic/frontend/src/screens/PaymentScreen.js",[],"/projects/woolunatic/frontend/src/screens/HowToScreen.js",[],"/projects/woolunatic/frontend/src/screens/ProductScreen/ProductScreen.js",["472"],"import React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { Col, ListGroup, Row, Card, Button, Form } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport ImageGallery from \"react-image-gallery\"\nimport ReactHtmlParser from \"react-html-parser\"\nimport Rating from \"../../components/Rating/Rating\"\nimport { productDetailsAction, productCreateReviewAction } from \"../../actions/productActions\"\nimport Message from \"../../components/Message\"\nimport Loader from \"../../components/Loader\"\nimport { PRODUCT_CREATE_REVIEW_RESET } from \"../../constants/productConstants\"\nimport Meta from \"../../components/Meta\"\nimport TranslateToWeight from \"../../components/TranslateToWeight\"\nimport \"./ProductScreen.css\"\n\nconst ProductScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n  const productId = match.params.id\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(5)\n  const [comment, setComment] = useState(\"\")\n  const [initialImages, setInitialImages] = useState([])\n  const [inStockArr, setInStockArr] = useState([])\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n  const productDetails = useSelector(state => state.productDetails)\n  const { loading, error, product } = productDetails\n  const productCreateReview = useSelector(state => state.productCreateReview)\n  const { loading: loadingCreateReview, error: errorCreateReview, success: successCreateReview } = productCreateReview\n  const noimage = \"/uploads/noimage/noimage.webp\"\n\n  const imagesForGallery = imageArray => {\n    let currentImages = []\n    imageArray.map(img => currentImages.push({ original: img, thumbnail: img }))\n    return currentImages\n  }\n\n  const checkImg = async (img, checkedImgArr) => {\n    await fetch(img).then(res => {\n      if (res.ok) {\n        checkedImgArr.push(img)\n      } else {\n        checkedImgArr.push(noimage)\n      }\n    })\n    setInitialImages([...imagesForGallery(checkedImgArr)])\n  }\n\n  useEffect(() => {\n    if (successCreateReview) {\n      setRating(0)\n      setComment(\"\")\n    }\n    if (!product || !product._id || product._id !== productId || successCreateReview) {\n      dispatch(productDetailsAction(productId))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    if (product && product.inStock) {\n      const arr = product.inStock\n        .split(\",\")\n        .map(el => Number(el.trim()))\n        .sort((a, b) => a - b)\n      setInStockArr([...arr])\n      if (arr.length === 1) {\n        setQty(arr[0])\n      }\n    }\n\n    if (!loading && product && Array.isArray(product.image) && product.image.length > 0) {\n      let checkedImgArr = []\n      product.image.map(img => checkImg(img, checkedImgArr))\n    } else {\n      setInitialImages([...imagesForGallery([noimage])])\n    }\n  }, [dispatch, successCreateReview, productId, product])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${productId}?qty=${qty}`)\n  }\n\n  const submitHandler = e => {\n    e.preventDefault()\n    dispatch(productCreateReviewAction(productId, { rating, comment }))\n  }\n\n  const showOptions = min => {\n    let values = []\n    let minLeftover = Math.ceil(((1500 / product.meterage) * 100) / 100) * 100\n    let maxVal = inStockArr[inStockArr.length - 1] - minLeftover\n    for (let i = min; i <= maxVal; i += 50) {\n      values.push(i)\n    }\n    return values\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} description={product.description} />\n          <div className=\"submenu\">\n            {userInfo && userInfo.isAdmin && (\n              <Link to={`/admin/product/${productId}/edit`} className=\"btn btn-success bg-blue my-3 px-5\">\n                Edit\n              </Link>\n            )}\n          </div>\n\n          <div id=\"product-details\">\n            {/* ---------------------------Gallery--------------------------- */}\n\n            <div id=\"product-gallery\">\n              <ImageGallery items={initialImages} showPlayButton={false} showIndex={true} thumbnailPosition=\"left\" />\n            </div>\n\n            {/* ---------------------------Title--------------------------- */}\n\n            <div id=\"product-title\">\n              <h5 className=\"product-brand\">{product.brand}</h5>\n              <h2>{product.name}</h2>\n              {product.regular && <div className=\"badge badge-pill badge-success\">regular</div>}\n              {product.novelty && <div className=\"badge badge-pill badge-primary\">new</div>}\n              {product.inSale && <div className=\"badge badge-pill badge-danger\">sale</div>}\n              <div className=\"text-right mr-3\">\n                <a href=\"#review-section\">\n                  <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                </a>\n              </div>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Color:</Col>\n                    <Col className=\"text-capitalize\">{product.color}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Basic Color:</Col>\n                    <Col className=\"text-capitalize\">{product.colorWay}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Fibers:</Col>\n                    <Col>{product.fibers}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Meterage:</Col>\n                    <Col>{product.meterage}m / 100g</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>NM:</Col>\n                    <Col>{product.nm}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Yarn weight:</Col>\n                    <Col>{TranslateToWeight(product.meterage)} weight</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Category:</Col>\n                    <Col className=\"text-capitalize\">{product.category && product.category.split(\",\").join(\", \")}</Col>\n                  </Row>\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n\n            {/* ---------------------------Add--------------------------- */}\n\n            <div id=\"product-add\" className=\"mx-3\">\n              <Card border=\"light\">\n                <Form onSubmit={addToCartHandler}>\n                  <ListGroup variant=\"flush\">\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Price: </Col>\n                        <Col>€{product.price} / 100g</Col>\n                      </Row>\n\n                      {!product.outOfStock && (\n                        <Row>\n                          <Col>Weight:</Col>\n                          <Col>\n                            <Form.Group controlId=\"qty\">\n                              <Form.Control as=\"select\" className=\"order-select\" value={qty} onChange={e => setQty(e.target.value)} required>\n                                <option key=\"0\" value=\"\">\n                                  Select...\n                                </option>\n                                {product.inStock &&\n                                  inStockArr.map((el, i) => (\n                                    <option key={i} value={el}>\n                                      {el}g cone\n                                    </option>\n                                  ))}\n\n                                {product.minimum &&\n                                  showOptions(product.minimum).map(el => (\n                                    <option key={el} value={el}>\n                                      {el}g\n                                    </option>\n                                  ))}\n                              </Form.Control>\n                            </Form.Group>\n                          </Col>\n                        </Row>\n                      )}\n                      <Row>\n                        <Col xl={12} xs={12}>\n                          <Button className=\"btn-block btn-success my-3\" type=\"submit\" disabled={product.outOfStock}>\n                            {!product.outOfStock ? \"Add to Cart\" : \"Out of Stock\"}\n                          </Button>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  </ListGroup>\n                </Form>\n              </Card>\n            </div>\n            {/* ---------------------------Description--------------------------- */}\n\n            <div id=\"product-description\">\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <div>{product.description && ReactHtmlParser(product.description)}</div>\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n\n            {/* ---------------------------Reviews-------------------------------- */}\n            <div id=\"product-reviews\">\n              <h2 className=\"my-3\" id=\"review-section\">\n                Reviews\n              </h2>\n              {product.reviews.length === 0 && <Message variant=\"warning\">No Reviews for this product</Message>}\n              <ListGroup variant=\"flush\">\n                {product.reviews.map(review => (\n                  <ListGroup.Item key={review._id}>\n                    <div className=\"h6\">\n                      {review.name} | <small>{review.createdAt.substring(0, 10)}</small>\n                    </div>\n\n                    <Rating value={review.rating} />\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </div>\n\n            {/* ---------------------------Write a customer Review--------------------------- */}\n            <div id=\"product-write-review\" className=\"mx-3 my-3\">\n              <ListGroup>\n                <ListGroup.Item>\n                  <h3>Write a customer Review</h3>\n                  {loadingCreateReview && <Loader />}\n                  {successCreateReview && <Message variant=\"success\">Review submitted successfully</Message>}\n                  {errorCreateReview && <Message variant=\"danger\">{errorCreateReview}</Message>}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId=\"rating\">\n                        <div id=\"rating\">\n                          <input type=\"radio\" name=\"rating\" value=\"5\" id=\"5\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"5\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"4\" id=\"4\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"4\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"3\" id=\"3\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"3\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"2\" id=\"2\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"2\">&#9734;</label>\n                          <input type=\"radio\" name=\"rating\" value=\"1\" id=\"1\" onChange={e => setRating(e.target.value)} />\n                          <label htmlFor=\"1\">&#9734;</label>\n                        </div>\n                      </Form.Group>\n                      <Form.Group>\n                        <Form.Control as=\"textarea\" rows=\"5\" value={comment} onChange={e => setComment(e.target.value)} placeholder=\"Write your review here...\" required></Form.Control>\n                      </Form.Group>\n                      <Button type=\"submit\" className=\"btn-block btn-success my-3\" disabled={loadingCreateReview}>\n                        Submit a review\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message variant=\"light\">\n                      Please <Link to=\"/login\">sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","/projects/woolunatic/frontend/src/screens/OrderScreen.js",["473","474"],"/projects/woolunatic/frontend/src/screens/CartScreen.js",["475"],"/projects/woolunatic/frontend/src/components/Message.js",[],"/projects/woolunatic/frontend/src/components/Loader.js",[],"/projects/woolunatic/frontend/src/components/Meta.js",[],"/projects/woolunatic/frontend/src/components/SearchBox.js",[],"/projects/woolunatic/frontend/src/components/FormContainer.js",[],"/projects/woolunatic/frontend/src/components/ImageLarge.js",[],"/projects/woolunatic/frontend/src/components/ImageUpload.js",[],"/projects/woolunatic/frontend/src/components/Paginate.js",[],"/projects/woolunatic/frontend/src/components/FormField.js",[],"/projects/woolunatic/frontend/src/components/OrderSummary.js",[],"/projects/woolunatic/frontend/src/constants/productConstants.js",[],"/projects/woolunatic/frontend/src/constants/userConstants.js",[],"/projects/woolunatic/frontend/src/constants/cartConstants.js",[],"/projects/woolunatic/frontend/src/constants/orderConstants.js",[],"/projects/woolunatic/frontend/src/components/Product/Product.js",[],"/projects/woolunatic/frontend/src/actions/cartActions.js",[],"/projects/woolunatic/frontend/src/actions/userActions.js",[],"/projects/woolunatic/frontend/src/actions/orderActions.js",["476"],"/projects/woolunatic/frontend/src/actions/productActions.js",[],"/projects/woolunatic/frontend/src/components/Filter/Filter.js",["477","478"],"import React, { useState, useEffect } from \"react\"\nimport { Card, Form, Button, ListGroup } from \"react-bootstrap\"\nimport TranslateToWeight from \"../TranslateToWeight\"\nimport \"./Filter.css\"\n//\nconst Filter = ({ products, setFilteredProducts }) => {\n  const initialFilter = {\n    category: [],\n    brand: [],\n    price: 0,\n    priceMin: 0,\n    priceMax: 0,\n    length: 0,\n    lengthMin: 0,\n    lengthMax: 0,\n    colorWay: [],\n    regular: false\n  }\n\n  const [initialFilterData, setInitialFilterData] = useState(initialFilter)\n  const [filterState, setFilterState] = useState(initialFilter)\n  const [showFibers, setShowFibers] = useState(false)\n  const [showBrands, setShowBrands] = useState(false)\n\n  useEffect(() => {\n    console.log(\"Filter:useEffect-1\")\n    const brandMap = {}\n    const brandArr = []\n    const categoryMap = { cashmere: 0, cashmix: 0, merino: 0, wool: 0, lambswool: 0, mohair: 0, camel: 0, alpaca: 0, yak: 0, angora: 0, cotton: 0, linen: 0, silk: 0, fantasy: 0, pailettes: 0 }\n    const categoryArr = []\n    const colorWayMap = { white: 0, natural: 0, beige: 0, yellow: 0, orange: 0, red: 0, pink: 0, purple: 0, blue: 0, green: 0, gray: 0, brown: 0, black: 0, multicolor: 0 }\n    const colorWayArr = []\n    let priceMinVar = 0\n    let priceMaxVar = 0\n    let lengthMinVar = 0\n    let lengthMaxVar = 0\n\n    products.map(product => {\n      if (priceMinVar === 0) priceMinVar = Number(product.price)\n      if (Number(product.price) < Number(priceMinVar)) priceMinVar = Number(product.price)\n      if (product.price > priceMaxVar) priceMaxVar = product.price\n      if (lengthMinVar === 0) lengthMinVar = Number(product.meterage)\n      if (Number(product.meterage) < Number(lengthMinVar)) lengthMinVar = Number(product.meterage)\n      if (product.meterage > lengthMaxVar) lengthMaxVar = product.meterage\n\n      checkIfExists(colorWayMap, product.colorWay.trim().toLowerCase())\n      checkIfExists(brandMap, product.brand.trim())\n      return product.category.split(\",\").map(cat => {\n        return checkIfExists(categoryMap, cat.trim().toLowerCase())\n      })\n    })\n\n    Object.keys(categoryMap).map(key => categoryArr.push([key, categoryMap[key]]))\n    Object.keys(colorWayMap).map(key => colorWayArr.push([key, colorWayMap[key]]))\n    Object.keys(brandMap).map(key => brandArr.push([key, brandMap[key]]))\n    let brandArrSorted = brandArr.sort((a, b) => (a[0] > b[0] ? 1 : -1))\n\n    setInitialFilterData({\n      category: [...categoryArr],\n      brand: [...brandArrSorted],\n      price: priceMaxVar,\n      priceMin: priceMinVar,\n      priceMax: priceMaxVar,\n      length: lengthMaxVar,\n      lengthMin: lengthMinVar,\n      lengthMax: lengthMaxVar,\n      colorWay: [...colorWayArr],\n      regular: false\n    })\n    setFilterState({ ...initialFilter, price: priceMaxVar, length: lengthMaxVar })\n    setFilteredProducts(products)\n  }, [products])\n\n  useEffect(() => {\n    console.log(\"Filter:useEffect-2\")\n    let newProds = multiPropsFilter(products, filterState)\n    setFilteredProducts(newProds)\n  }, [products, filterState])\n\n  const multiPropsFilter = (productsToFilter, filters) => {\n    const filterKeys = Object.keys(filters)\n    return productsToFilter.filter(product => {\n      return filterKeys.every(key => {\n        if (typeof filters[key] === \"boolean\") {\n          if (filters[key] === true) {\n            return product[key] === true\n          } else {\n            return true\n          }\n        }\n        if (!filters[key].length) {\n          return true\n        }\n        if (key === \"price\") return product[key] <= filters[key]\n        if (key === \"length\") return product.meterage <= filters[key]\n        if (typeof product[key] === \"string\" && product[key].includes(\",\")) {\n          return product[key].split(\",\").some(keyEle => filters[key].includes(keyEle))\n        }\n\n        return filters[key].includes(product[key])\n      })\n    })\n  }\n\n  const checkIfExists = (mapOfValues, value) => {\n    if (mapOfValues[value]) {\n      mapOfValues[value] = mapOfValues[value] + 1\n    } else {\n      mapOfValues[value] = 1\n    }\n  }\n\n  const onChangeStateHandler = (e, field) => {\n    setFilterState({ ...filterState, [field]: e.target.value })\n  }\n\n  const handleBoolean = (e, field) => {\n    setFilterState({ ...filterState, [field]: e.target.checked })\n  }\n\n  const clearFilterHandler = () => {\n    setFilterState({ ...initialFilter, price: initialFilterData.priceMax, length: initialFilterData.lengthMax })\n    setFilteredProducts(products)\n  }\n\n  const handleToggle = (value, cat) => {\n    const currentIndex = filterState[cat].indexOf(value)\n    const copyFilterState = [...filterState[cat]]\n    if (currentIndex === -1) {\n      copyFilterState.push(value)\n    } else {\n      copyFilterState.splice(currentIndex, 1)\n    }\n    setFilterState({\n      ...filterState,\n      [cat]: [...copyFilterState]\n    })\n  }\n\n  console.log(\"filterState: \", filterState)\n\n  return (\n    <>\n      <div className=\"text-center\">{products && <h6>total {products.length} yarns</h6>}</div>\n      <Card className=\"filter\">\n        <Card.Header>\n          <Button onClick={clearFilterHandler} className=\"btn-success\" block>\n            <nobr>Clear filter</nobr>\n          </Button>\n          <Card.Title as=\"h4\" className=\"text-center\">\n            Filter Yarns\n          </Card.Title>\n        </Card.Header>\n\n        <Form>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <Form.Group controlId=\"priceRange\">\n                <Form.Label as=\"h5\">Price, €/100g</Form.Label>\n                <Form.Control min={initialFilterData.priceMin} max={initialFilterData.priceMax} step={0.5} type=\"range\" onChange={e => onChangeStateHandler(e, \"price\")} value={filterState.price} />\n                <div className=\"label-comment\">\n                  <div>\n                    <small>€{initialFilterData.priceMin}</small>\n                  </div>\n                  <div>\n                    {initialFilterData.priceMin}-{filterState.price}\n                  </div>\n                  <div>\n                    <small>€{initialFilterData.priceMax}</small>\n                  </div>\n                </div>\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"fibersRange\">\n                <Form.Label as=\"h5\">Fiber Content</Form.Label>\n                {initialFilterData.category &&\n                  initialFilterData.category\n                    .filter(fib => fib[1] > 0)\n                    .map((fib, i) => (\n                      <div key={fib[0]} className={i > 5 && !showFibers ? \"display-none\" : \"display-block\"}>\n                        <Form.Check //\n                          type=\"checkbox\"\n                          className=\"custom-checkbox\"\n                          id={fib[0]}\n                          label={\n                            fib[0] === \"cashmix\" //\n                              ? `cashmere mix (${fib[1]})`\n                              : fib[0] === \"camel\"\n                              ? `camel hair (${fib[1]})`\n                              : `${fib[0]} (${fib[1]})`\n                          }\n                          onChange={() => handleToggle(fib[0], \"category\")}\n                          checked={filterState.category.includes(fib[0])}\n                        />\n                      </div>\n                    ))}\n                {initialFilterData.category.filter(fib => fib[1] > 0).length > 5 && (\n                  <div>\n                    <small>\n                      {!showFibers ? (\n                        <div className=\"link-primary py-2\" onClick={() => setShowFibers(true)}>\n                          show more...\n                        </div>\n                      ) : (\n                        <div className=\"link-primary py-2\" onClick={() => setShowFibers(false)}>\n                          show less...\n                        </div>\n                      )}\n                    </small>\n                  </div>\n                )}\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"lengthRange\">\n                <Form.Label as=\"h5\">Weight</Form.Label>\n                <div className=\"label-comment\">\n                  <div>{/* <small>{TranslateToWeight(initialFilterData.lengthMin)}</small> */}</div>\n                  <div className=\"mx-2\">\n                    <nobr>\n                      <small>{TranslateToWeight(initialFilterData.lengthMin)}</small> - {TranslateToWeight(filterState.length)}\n                    </nobr>\n                  </div>\n                  <div>\n                    <small></small>\n                  </div>\n                </div>\n                <Form.Control min={initialFilterData.lengthMin} max={initialFilterData.lengthMax} step={10} type=\"range\" onChange={e => onChangeStateHandler(e, \"length\")} value={filterState.length} />\n                <div className=\"label-comment\">\n                  <div>\n                    <small>{initialFilterData.lengthMin}m</small>\n                  </div>\n                  <div className=\"mx-2\">\n                    <nobr>\n                      {initialFilterData.lengthMin}-{filterState.length}\n                    </nobr>\n                  </div>\n                  <div>\n                    <small>{initialFilterData.lengthMax}m</small>\n                  </div>\n                </div>\n                <Form.Label as=\"h5\" className=\"mt-3\">\n                  Length, m/100g\n                </Form.Label>\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"colorRange\">\n                <Form.Label as=\"h5\">Color</Form.Label>\n                <div className=\"color\">\n                  {initialFilterData.colorWay &&\n                    initialFilterData.colorWay.map(\n                      col =>\n                        col[1] > 0 && (\n                          <Form.Check //\n                            key={col[0]}\n                            className={col[0]}\n                            type=\"checkbox\"\n                            id={col[0]}\n                            title={`${col[0]} (${col[1]})`}\n                            label={`${col[0]} (${col[1]})`}\n                            disabled={col[1] === 0}\n                            onChange={() => handleToggle(col[0], \"colorWay\")}\n                            checked={filterState.colorWay.includes(col[0])}\n                          />\n                        )\n                    )}\n                </div>\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"brandsRange\">\n                <Form.Label as=\"h5\">Brand</Form.Label>\n                {initialFilterData.brand &&\n                  initialFilterData.brand.map((brand, i) => (\n                    <div key={brand[0]} className={i > 5 && !showBrands ? \"display-none\" : \"display-block\"}>\n                      <Form.Check //\n                        type=\"checkbox\"\n                        className=\"custom-checkbox\"\n                        id={brand[0]}\n                        label={`${brand[0]} (${brand[1]})`}\n                        onChange={() => handleToggle(brand[0], \"brand\")}\n                        checked={filterState.brand.includes(brand[0])}\n                      />\n                    </div>\n                  ))}\n                {initialFilterData.brand.filter(fib => fib[1] > 0).length > 5 && (\n                  <div>\n                    <small>\n                      {!showBrands ? (\n                        <div className=\"link-primary py-2\" onClick={() => setShowBrands(true)}>\n                          show more...\n                        </div>\n                      ) : (\n                        <div className=\"link-primary py-2\" onClick={() => setShowBrands(false)}>\n                          show less...\n                        </div>\n                      )}\n                    </small>\n                  </div>\n                )}\n              </Form.Group>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Form.Group controlId=\"regularRange\">\n                <Form.Check //\n                  type=\"checkbox\"\n                  className=\"custom-checkbox\"\n                  id=\"regular\"\n                  label=\"Regular\"\n                  onChange={e => handleBoolean(e, \"regular\")}\n                  checked={filterState.regular}\n                />\n              </Form.Group>\n            </ListGroup.Item>\n          </ListGroup>\n        </Form>\n      </Card>\n    </>\n  )\n}\n\nexport default Filter\n","/projects/woolunatic/frontend/src/components/Promo/Promo.js",[],"/projects/woolunatic/frontend/src/components/ProductListItem/ProductListItem.js",[],"/projects/woolunatic/frontend/src/components/CartItems.jsx",[],"/projects/woolunatic/frontend/src/components/Rating/Rating.js",[],"/projects/woolunatic/frontend/src/components/PaymentMollie.js",[],"/projects/woolunatic/frontend/src/components/CheckoutSteps.js",[],"/projects/woolunatic/frontend/src/components/PaymentStatus.js",[],"/projects/woolunatic/frontend/src/components/TranslateToWeight.js",[],"/projects/woolunatic/frontend/src/screens/admin/UserListScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/UserEditScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/ProductListScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/OrderListScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/AdminScreen.js",[],"/projects/woolunatic/frontend/src/screens/admin/ProductEditScreen.js",[],"/projects/woolunatic/frontend/src/components/ShippingSection.js",[],"/projects/woolunatic/frontend/src/components/PaymentSection/PaymentSection.js",["479","480"],"import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Form, Button, Col, Row } from \"react-bootstrap\"\nimport { useDispatch } from \"react-redux\"\nimport { savePaymentMethodAction } from \"../../actions/cartActions\"\nimport { PayPalButton } from \"react-paypal-button-v2\"\nimport Message from \"../Message\"\nimport Loader from \"../Loader\"\nimport { molliePayAction, payOrderAction } from \"../../actions/orderActions\"\n// import MolliePayment from \"../PaymentMollie\"\nimport \"./PaymentSection.css\"\nimport PaymentStatus from \"../PaymentStatus\"\n\nconst Payment = ({ order, userInfo, checkoutStep, paymentMethod, setPaymentMethod }) => {\n  const dispatch = useDispatch()\n  const orderId = order._id\n  const [sdkReady, setSdkReady] = useState(false)\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\")\n      const script = document.createElement(\"script\")\n      script.type = \"text/javascript\"\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n    if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [order])\n\n  const onSelectPaymentMethod = e => {\n    setPaymentMethod(e.target.value)\n    dispatch(savePaymentMethodAction(e.target.value))\n  }\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrderAction(orderId, paymentResult))\n  }\n\n  const proceedMollyPayment = () => {\n    const data = {\n      totalPrice: order.totalPrice,\n      currency: \"EUR\",\n      description: `Order #${order._id}`,\n      orderId: order._id\n    }\n    dispatch(molliePayAction(data))\n  }\n\n  const radioButton = (label, name) => (\n    <Form.Check //\n      type=\"radio\"\n      label={label}\n      id={name}\n      name=\"paymentMethod\"\n      value={name}\n      checked={paymentMethod === name}\n      onChange={onSelectPaymentMethod}\n    ></Form.Check>\n  )\n\n  const showLinks = links => {\n    const arr = JSON.parse(links)\n    console.log(\"arr: \", arr)\n    return Object.keys(arr).map(key => (\n      <Row key={key}>\n        <Col xs={4} sm={6} lg={4} className=\"p-0 m-0\">\n          <small>\n            <i>{key}: </i>\n          </small>\n        </Col>\n        <Col className=\"m-0 p-0\">\n          <a href={arr[key].href} target=\"_blank\" rel=\"noreferrer\">\n            {arr[key].href.substring(0, 20)}...\n          </a>\n        </Col>\n      </Row>\n    ))\n  }\n\n  return (\n    <>\n      {!order.isPaid && checkoutStep === \"payment\" && (\n        <>\n          <Form.Group className=\"mb-3\">\n            <Form.Group>\n              <Row>\n                <Col xs={3} lg={2} xl={2}>\n                  {radioButton(\"Mollie\", \"Mollie\")}\n                </Col>\n                <Col>\n                  <img src=\"/assets/payments/ideal.svg\" className=\"payment-icon\" alt=\"ideal\" />\n                  <img src=\"/assets/payments/sepa.svg\" className=\"payment-icon\" alt=\"sepa\" />\n                  <img src=\"/assets/payments/ing.svg\" className=\"payment-icon\" alt=\"ing\" />\n                  <img src=\"/assets/payments/applepay.svg\" className=\"payment-icon\" alt=\"applepay\" />\n                  <img src=\"/assets/payments/visa.svg\" className=\"payment-icon\" alt=\"visa\" />\n                  <img src=\"/assets/payments/mastercard.svg\" className=\"payment-icon\" alt=\"mastercard\" />\n                  <img src=\"/assets/payments/amex.svg\" className=\"payment-icon\" alt=\"amex\" />\n                </Col>\n              </Row>\n\n              {/* {!order.isPaid && paymentMethod === \"Mollie\" && (\n                <Col md={6}>\n                  <Button onClick={proceedMollyPayment}>Mollie Pay</Button>\n                </Col>\n              )} */}\n\n              <Row>\n                <Col xs={3} lg={2} xl={2}>\n                  {radioButton(\"PayPal\", \"PayPal\")}\n                </Col>\n                <Col>\n                  <img src=\"/assets/payments/paypal.svg\" className=\"payment-icon\" alt=\"paypal\" />\n                  <img src=\"/assets/payments/visa.svg\" className=\"payment-icon\" alt=\"visa\" />\n                  <img src=\"/assets/payments/mastercard.svg\" className=\"payment-icon\" alt=\"mastercard\" />\n                  <img src=\"/assets/payments/amex.svg\" className=\"payment-icon\" alt=\"amex\" />\n                </Col>\n              </Row>\n            </Form.Group>\n          </Form.Group>\n        </>\n      )}\n      {!order.isPaid && paymentMethod === \"PayPal\" && <Col md={6}>{!sdkReady ? <Loader /> : <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />}</Col>}\n\n      {order.isPaid && (\n        <>\n          <Message variant=\"success\">Paid on {new Date(order.paidAt).toString()}</Message>\n          {order.paymentMethod && (\n            <PaymentRow val1=\"Payment Method\">\n              <span className=\"text-capitalize\">{order.paymentMethod}</span>\n            </PaymentRow>\n          )}\n          <PaymentRow val1=\"Payment ID\">{order.paymentResult.id}</PaymentRow>\n          <PaymentRow val1=\"Status\">{order.paymentResult && order.paymentResult.status && <PaymentStatus paymentStatus={order.paymentResult.status} />}</PaymentRow>\n          {order.paymentResult && order.paymentResult.email && <PaymentRow val1=\"Email\"> {order.paymentResult.email}</PaymentRow>}\n          <PaymentRow val1=\"Links\">{order.paymentResult.links && showLinks(order.paymentResult.links)}</PaymentRow>\n        </>\n      )}\n      {/* {!order.isPaid && !paymentMethod && <Message variant=\"warning\">Not Paid</Message>} */}\n    </>\n  )\n}\n\nconst PaymentRow = ({ val1, children }) => {\n  return (\n    <Row>\n      <Col xl={2} xs={2} className=\"mr-2 h6 mb-0\">\n        {val1}\n      </Col>\n      <Col className=\"p-0 m-0\">{children}</Col>\n    </Row>\n  )\n}\n\nexport default Payment\n","/projects/woolunatic/frontend/src/components/CartItem.jsx",[],"/projects/woolunatic/frontend/src/components/Payment/Payment.js",["481","482"],"import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Form, Button, Col, Row } from \"react-bootstrap\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { savePaymentMethodAction } from \"../../actions/cartActions\"\nimport { PayPalButton } from \"react-paypal-button-v2\"\nimport Message from \"../Message\"\nimport Loader from \"../Loader\"\nimport { molliePayAction, payOrderAction } from \"../../actions/orderActions\"\nimport MolliePayment from \"../PaymentMollie\"\nimport \"./Payment.css\"\nimport PaymentStatus from \"../PaymentStatus\"\n\nconst Payment = ({ order, userInfo }) => {\n  const dispatch = useDispatch()\n  const orderId = order._id\n  const [paymentMethod, setPaymentMethod] = useState(\"\")\n  const [sdkReady, setSdkReady] = useState(false)\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\")\n      const script = document.createElement(\"script\")\n      script.type = \"text/javascript\"\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [order])\n\n  const onSelectPaymentMethod = e => {\n    setPaymentMethod(e.target.value)\n    dispatch(savePaymentMethodAction(e.target.value))\n  }\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrderAction(orderId, paymentResult))\n  }\n\n  const proceedMollyPayment = () => {\n    const data = {\n      totalPrice: order.totalPrice,\n      currency: \"EUR\",\n      description: `Order #${order._id}`,\n      orderId: order._id\n    }\n    dispatch(molliePayAction(data))\n  }\n\n  const radioButton = (label, name) => (\n    <Form.Check //\n      type=\"radio\"\n      label={label}\n      id={name}\n      name=\"paymentMethod\"\n      value={name}\n      checked={paymentMethod === name}\n      onChange={onSelectPaymentMethod}\n    ></Form.Check>\n  )\n\n  const showLinks = links => {\n    const arr = JSON.parse(links)\n    console.log(\"arr: \", arr)\n    return Object.keys(arr).map(key => (\n      <Row key={key}>\n        <Col xs={4} sm={6} lg={4} className=\"p-0 m-0\">\n          <small>\n            <i>{key}: </i>\n          </small>\n        </Col>\n        <Col className=\"m-0 p-0\">\n          <a href={arr[key].href} target=\"_blank\" rel=\"noreferrer\">\n            {arr[key].href.substring(0, 20)}...\n          </a>\n        </Col>\n      </Row>\n    ))\n  }\n\n  return (\n    <>\n      {!order.isPaid && (\n        <>\n          <Form.Group className=\"mb-3\">\n            <Form.Group>\n              <Row>\n                <Col xs={3} lg={2} xl={2}>\n                  {radioButton(\"Mollie\", \"Mollie\")}\n                </Col>\n                <Col>\n                  <img src=\"/assets/payments/ideal.svg\" className=\"payment-icon\" alt=\"ideal\" />\n                  <img src=\"/assets/payments/sepa.svg\" className=\"payment-icon\" alt=\"sepa\" />\n                  <img src=\"/assets/payments/ing.svg\" className=\"payment-icon\" alt=\"ing\" />\n                  <img src=\"/assets/payments/applepay.svg\" className=\"payment-icon\" alt=\"applepay\" />\n                  <img src=\"/assets/payments/visa.svg\" className=\"payment-icon\" alt=\"visa\" />\n                  <img src=\"/assets/payments/mastercard.svg\" className=\"payment-icon\" alt=\"mastercard\" />\n                  <img src=\"/assets/payments/amex.svg\" className=\"payment-icon\" alt=\"amex\" />\n                </Col>\n              </Row>\n              {!order.isPaid && paymentMethod === \"Mollie\" && <Col md={6}>{<Button onClick={proceedMollyPayment}>Mollie Pay</Button>}</Col>}\n              <Row>\n                <Col xs={3} lg={2} xl={2}>\n                  {radioButton(\"PayPal\", \"PayPal\")}\n                </Col>\n                <Col>\n                  <img src=\"/assets/payments/paypal.svg\" className=\"payment-icon\" alt=\"paypal\" />\n                  <img src=\"/assets/payments/visa.svg\" className=\"payment-icon\" alt=\"visa\" />\n                  <img src=\"/assets/payments/mastercard.svg\" className=\"payment-icon\" alt=\"mastercard\" />\n                  <img src=\"/assets/payments/amex.svg\" className=\"payment-icon\" alt=\"amex\" />\n                </Col>\n              </Row>\n            </Form.Group>\n          </Form.Group>\n        </>\n      )}\n      {!order.isPaid && paymentMethod === \"PayPal\" && <Col md={6}>{!sdkReady ? <Loader /> : <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />}</Col>}\n\n      {order.isPaid && (\n        <>\n          <Message variant=\"success\">Paid on {new Date(order.paidAt).toString()}</Message>\n          {order.paymentMethod && (\n            <PaymentRow val1=\"Payment Method\">\n              <span className=\"text-capitalize\">{order.paymentMethod}</span>\n            </PaymentRow>\n          )}\n          <PaymentRow val1=\"Payment ID\">{order.paymentResult.id}</PaymentRow>\n          <PaymentRow val1=\"Status\">{order.paymentResult && order.paymentResult.status && <PaymentStatus paymentStatus={order.paymentResult.status} />}</PaymentRow>\n          {order.paymentResult && order.paymentResult.email && <PaymentRow val1=\"Email\"> {order.paymentResult.email}</PaymentRow>}\n          <PaymentRow val1=\"Links\">{order.paymentResult.links && showLinks(order.paymentResult.links)}</PaymentRow>\n        </>\n      )}\n      {!order.isPaid && !paymentMethod && <Message variant=\"warning\">Not Paid</Message>}\n    </>\n  )\n}\n\nconst PaymentRow = ({ val1, children }) => {\n  return (\n    <Row>\n      <Col xl={2} xs={2} className=\"mr-2 h6 mb-0\">\n        {val1}\n      </Col>\n      <Col className=\"p-0 m-0\">{children}</Col>\n    </Row>\n  )\n}\n\nexport default Payment\n","/projects/woolunatic/frontend/src/components/OrderWeightsSummary.js",[],"/projects/woolunatic/frontend/src/screens/HideScreen.js",[],{"ruleId":"483","replacedBy":"484"},{"ruleId":"485","replacedBy":"486"},{"ruleId":"483","replacedBy":"487"},{"ruleId":"485","replacedBy":"488"},{"ruleId":"483","replacedBy":"489"},{"ruleId":"485","replacedBy":"490"},{"ruleId":"483","replacedBy":"491"},{"ruleId":"485","replacedBy":"492"},{"ruleId":"483","replacedBy":"493"},{"ruleId":"485","replacedBy":"494"},{"ruleId":"495","severity":1,"message":"496","line":26,"column":6,"nodeType":"497","endLine":26,"endColumn":32,"suggestions":"498"},{"ruleId":"483","replacedBy":"499"},{"ruleId":"485","replacedBy":"500"},{"ruleId":"501","severity":1,"message":"502","line":24,"column":10,"nodeType":"503","messageId":"504","endLine":24,"endColumn":15},{"ruleId":"501","severity":1,"message":"505","line":24,"column":17,"nodeType":"503","messageId":"504","endLine":24,"endColumn":25},{"ruleId":"501","severity":1,"message":"506","line":25,"column":10,"nodeType":"503","messageId":"504","endLine":25,"endColumn":16},{"ruleId":"501","severity":1,"message":"507","line":25,"column":18,"nodeType":"503","messageId":"504","endLine":25,"endColumn":27},{"ruleId":"483","replacedBy":"508"},{"ruleId":"485","replacedBy":"509"},{"ruleId":"483","replacedBy":"510"},{"ruleId":"485","replacedBy":"511"},{"ruleId":"483","replacedBy":"512"},{"ruleId":"485","replacedBy":"513"},{"ruleId":"483","replacedBy":"514"},{"ruleId":"485","replacedBy":"515"},{"ruleId":"483","replacedBy":"516"},{"ruleId":"485","replacedBy":"517"},{"ruleId":"483","replacedBy":"518"},{"ruleId":"485","replacedBy":"519"},{"ruleId":"501","severity":1,"message":"520","line":18,"column":27,"nodeType":"503","messageId":"504","endLine":18,"endColumn":34},{"ruleId":"495","severity":1,"message":"521","line":75,"column":6,"nodeType":"497","endLine":75,"endColumn":57,"suggestions":"522"},{"ruleId":"501","severity":1,"message":"523","line":4,"column":46,"nodeType":"503","messageId":"504","endLine":4,"endColumn":50},{"ruleId":"501","severity":1,"message":"524","line":21,"column":20,"nodeType":"503","messageId":"504","endLine":21,"endColumn":30},{"ruleId":"501","severity":1,"message":"523","line":4,"column":39,"nodeType":"503","messageId":"504","endLine":4,"endColumn":43},{"ruleId":"501","severity":1,"message":"525","line":23,"column":3,"nodeType":"503","messageId":"504","endLine":23,"endColumn":25},{"ruleId":"495","severity":1,"message":"526","line":72,"column":6,"nodeType":"497","endLine":72,"endColumn":16,"suggestions":"527"},{"ruleId":"495","severity":1,"message":"528","line":78,"column":6,"nodeType":"497","endLine":78,"endColumn":29,"suggestions":"529"},{"ruleId":"501","severity":1,"message":"530","line":3,"column":16,"nodeType":"503","messageId":"504","endLine":3,"endColumn":22},{"ruleId":"501","severity":1,"message":"531","line":49,"column":9,"nodeType":"503","messageId":"504","endLine":49,"endColumn":28},{"ruleId":"501","severity":1,"message":"532","line":4,"column":23,"nodeType":"503","messageId":"504","endLine":4,"endColumn":34},{"ruleId":"501","severity":1,"message":"533","line":10,"column":8,"nodeType":"503","messageId":"504","endLine":10,"endColumn":21},"no-native-reassign",["534"],"no-negated-in-lhs",["535"],["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["536"],["534"],["535"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","'setColor' is assigned a value but never used.","'weight' is assigned a value but never used.","'setWeight' is assigned a value but never used.",["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],["534"],["535"],"'success' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkImg' and 'loading'. Either include them or remove the dependency array.",["537"],"'Card' is defined but never used.","'loadingPay' is assigned a value but never used.","'ORDER_MOLLIE_PAY_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'initialFilter' and 'setFilteredProducts'. Either include them or remove the dependency array. If 'setFilteredProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"React Hook useEffect has a missing dependency: 'setFilteredProducts'. Either include it or remove the dependency array. If 'setFilteredProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["539"],"'Button' is defined but never used.","'proceedMollyPayment' is assigned a value but never used.","'useSelector' is defined but never used.","'MolliePayment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},{"desc":"546","fix":"547"},"Update the dependencies array to be: [dispatch, history, productId, qty, userInfo]",{"range":"548","text":"549"},"Update the dependencies array to be: [dispatch, successCreateReview, productId, product, loading, checkImg]",{"range":"550","text":"551"},"Update the dependencies array to be: [initialFilter, products, setFilteredProducts]",{"range":"552","text":"553"},"Update the dependencies array to be: [products, filterState, setFilteredProducts]",{"range":"554","text":"555"},[925,951],"[dispatch, history, productId, qty, userInfo]",[2842,2893],"[dispatch, successCreateReview, productId, product, loading, checkImg]",[2850,2860],"[initialFilter, products, setFilteredProducts]",[3019,3042],"[products, filterState, setFilteredProducts]"]